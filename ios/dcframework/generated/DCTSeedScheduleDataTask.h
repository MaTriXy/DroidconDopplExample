//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DCTSeedScheduleDataTask")
#ifdef RESTRICT_DCTSeedScheduleDataTask
#define INCLUDE_ALL_DCTSeedScheduleDataTask 0
#else
#define INCLUDE_ALL_DCTSeedScheduleDataTask 1
#endif
#undef RESTRICT_DCTSeedScheduleDataTask

#if !defined (DCTSeedScheduleDataTask_) && (INCLUDE_ALL_DCTSeedScheduleDataTask || defined(INCLUDE_DCTSeedScheduleDataTask))
#define DCTSeedScheduleDataTask_

#define RESTRICT_CoTouchlabAndroidThreadingTasksTask 1
#define INCLUDE_CoTouchlabAndroidThreadingTasksTask 1
#include "CoTouchlabAndroidThreadingTasksTask.h"

@class AndroidContentContext;

@interface DCTSeedScheduleDataTask : CoTouchlabAndroidThreadingTasksTask

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)dataseed;

#pragma mark Protected

- (jboolean)handleErrorWithAndroidContentContext:(AndroidContentContext *)context
                                 withNSException:(NSException *)e;

- (void)onCompleteWithAndroidContentContext:(AndroidContentContext *)context;

- (void)runWithAndroidContentContext:(AndroidContentContext *)context;

@end

J2OBJC_EMPTY_STATIC_INIT(DCTSeedScheduleDataTask)

FOUNDATION_EXPORT void DCTSeedScheduleDataTask_initWithNSString_(DCTSeedScheduleDataTask *self, NSString *dataseed);

FOUNDATION_EXPORT DCTSeedScheduleDataTask *new_DCTSeedScheduleDataTask_initWithNSString_(NSString *dataseed) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DCTSeedScheduleDataTask *create_DCTSeedScheduleDataTask_initWithNSString_(NSString *dataseed);

J2OBJC_TYPE_LITERAL_HEADER(DCTSeedScheduleDataTask)

@compatibility_alias CoTouchlabDroidconandroidSharedTasksSeedScheduleDataTask DCTSeedScheduleDataTask;

#endif

#pragma pop_macro("INCLUDE_ALL_DCTSeedScheduleDataTask")
