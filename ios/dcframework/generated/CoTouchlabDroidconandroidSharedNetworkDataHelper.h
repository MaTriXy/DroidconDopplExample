//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabDroidconandroidSharedNetworkDataHelper")
#ifdef RESTRICT_CoTouchlabDroidconandroidSharedNetworkDataHelper
#define INCLUDE_ALL_CoTouchlabDroidconandroidSharedNetworkDataHelper 0
#else
#define INCLUDE_ALL_CoTouchlabDroidconandroidSharedNetworkDataHelper 1
#endif
#undef RESTRICT_CoTouchlabDroidconandroidSharedNetworkDataHelper

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CoTouchlabDroidconandroidSharedNetworkDataHelper_) && (INCLUDE_ALL_CoTouchlabDroidconandroidSharedNetworkDataHelper || defined(INCLUDE_CoTouchlabDroidconandroidSharedNetworkDataHelper))
#define CoTouchlabDroidconandroidSharedNetworkDataHelper_

@class AndroidContentContext;
@class RetrofitRestAdapter;
@class RetrofitRestAdapter_Builder;
@protocol DCPPlatformClient;
@protocol RetrofitErrorHandler;

@interface CoTouchlabDroidconandroidSharedNetworkDataHelper : NSObject

#pragma mark Public

- (instancetype)init;

+ (RetrofitRestAdapter *)makeRequestAdapterWithAndroidContentContext:(AndroidContentContext *)context
                                               withDCPPlatformClient:(id<DCPPlatformClient>)platformClient;

+ (RetrofitRestAdapter_Builder *)makeRequestAdapterBuilderWithAndroidContentContext:(AndroidContentContext *)context
                                                              withDCPPlatformClient:(id<DCPPlatformClient>)platformClient;

+ (RetrofitRestAdapter_Builder *)makeRequestAdapterBuilderWithAndroidContentContext:(AndroidContentContext *)context
                                                              withDCPPlatformClient:(id<DCPPlatformClient>)platformClient
                                                           withRetrofitErrorHandler:(id<RetrofitErrorHandler>)errorHandler;

+ (RetrofitRestAdapter_Builder *)makeRequestAdapterBuilderWithAndroidContentContext:(AndroidContentContext *)context
                                                              withDCPPlatformClient:(id<DCPPlatformClient>)platformClient
                                                                       withNSString:(NSString *)baseUrl
                                                           withRetrofitErrorHandler:(id<RetrofitErrorHandler>)errorHandler;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDroidconandroidSharedNetworkDataHelper)

FOUNDATION_EXPORT void CoTouchlabDroidconandroidSharedNetworkDataHelper_init(CoTouchlabDroidconandroidSharedNetworkDataHelper *self);

FOUNDATION_EXPORT CoTouchlabDroidconandroidSharedNetworkDataHelper *new_CoTouchlabDroidconandroidSharedNetworkDataHelper_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabDroidconandroidSharedNetworkDataHelper *create_CoTouchlabDroidconandroidSharedNetworkDataHelper_init();

FOUNDATION_EXPORT RetrofitRestAdapter *CoTouchlabDroidconandroidSharedNetworkDataHelper_makeRequestAdapterWithAndroidContentContext_withDCPPlatformClient_(AndroidContentContext *context, id<DCPPlatformClient> platformClient);

FOUNDATION_EXPORT RetrofitRestAdapter_Builder *CoTouchlabDroidconandroidSharedNetworkDataHelper_makeRequestAdapterBuilderWithAndroidContentContext_withDCPPlatformClient_(AndroidContentContext *context, id<DCPPlatformClient> platformClient);

FOUNDATION_EXPORT RetrofitRestAdapter_Builder *CoTouchlabDroidconandroidSharedNetworkDataHelper_makeRequestAdapterBuilderWithAndroidContentContext_withDCPPlatformClient_withRetrofitErrorHandler_(AndroidContentContext *context, id<DCPPlatformClient> platformClient, id<RetrofitErrorHandler> errorHandler);

FOUNDATION_EXPORT RetrofitRestAdapter_Builder *CoTouchlabDroidconandroidSharedNetworkDataHelper_makeRequestAdapterBuilderWithAndroidContentContext_withDCPPlatformClient_withNSString_withRetrofitErrorHandler_(AndroidContentContext *context, id<DCPPlatformClient> platformClient, NSString *baseUrl, id<RetrofitErrorHandler> errorHandler);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDroidconandroidSharedNetworkDataHelper)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CoTouchlabDroidconandroidSharedNetworkDataHelper")
