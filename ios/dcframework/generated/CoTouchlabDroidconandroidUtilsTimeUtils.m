//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/DroidconDopplExample/lib/src/main/java/co/touchlab/droidconandroid/utils/TimeUtils.java
//

#include "CoTouchlabDroidconandroidUtilsTimeUtils.h"
#include "J2ObjC_source.h"
#include "java/lang/Long.h"
#include "java/lang/ThreadLocal.h"
#include "java/text/DateFormat.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Calendar.h"
#include "java/util/Date.h"
#include "java/util/GregorianCalendar.h"
#include "java/util/Locale.h"
#include "java/util/TimeZone.h"

@interface CoTouchlabDroidconandroidUtilsTimeUtils_$1 : JavaLangThreadLocal

- (JavaTextDateFormat *)initialValue OBJC_METHOD_FAMILY_NONE;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDroidconandroidUtilsTimeUtils_$1)

__attribute__((unused)) static void CoTouchlabDroidconandroidUtilsTimeUtils_$1_init(CoTouchlabDroidconandroidUtilsTimeUtils_$1 *self);

__attribute__((unused)) static CoTouchlabDroidconandroidUtilsTimeUtils_$1 *new_CoTouchlabDroidconandroidUtilsTimeUtils_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabDroidconandroidUtilsTimeUtils_$1 *create_CoTouchlabDroidconandroidUtilsTimeUtils_$1_init();

J2OBJC_INITIALIZED_DEFN(CoTouchlabDroidconandroidUtilsTimeUtils)

JavaUtilTimeZone *CoTouchlabDroidconandroidUtilsTimeUtils_TIME_ZONE;
JavaLangThreadLocal *CoTouchlabDroidconandroidUtilsTimeUtils_DATE_FORMAT;

@implementation CoTouchlabDroidconandroidUtilsTimeUtils

+ (JavaTextSimpleDateFormat *)makeDateFormatWithNSString:(NSString *)format {
  return CoTouchlabDroidconandroidUtilsTimeUtils_makeDateFormatWithNSString_(format);
}

+ (JavaLangLong *)sanitizeWithJavaUtilDate:(JavaUtilDate *)date {
  return CoTouchlabDroidconandroidUtilsTimeUtils_sanitizeWithJavaUtilDate_(date);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabDroidconandroidUtilsTimeUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaTextSimpleDateFormat;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangLong;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(makeDateFormatWithNSString:);
  methods[1].selector = @selector(sanitizeWithJavaUtilDate:);
  methods[2].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TIME_ZONE", "LJavaUtilTimeZone;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "DATE_FORMAT", "LJavaLangThreadLocal;", .constantValue.asLong = 0, 0x9, -1, 5, 6, -1 },
  };
  static const void *ptrTable[] = { "makeDateFormat", "LNSString;", "sanitize", "LJavaUtilDate;", &CoTouchlabDroidconandroidUtilsTimeUtils_TIME_ZONE, &CoTouchlabDroidconandroidUtilsTimeUtils_DATE_FORMAT, "Ljava/lang/ThreadLocal<Ljava/text/DateFormat;>;" };
  static const J2ObjcClassInfo _CoTouchlabDroidconandroidUtilsTimeUtils = { "TimeUtils", "co.touchlab.droidconandroid.utils", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, -1, -1, -1, -1 };
  return &_CoTouchlabDroidconandroidUtilsTimeUtils;
}

+ (void)initialize {
  if (self == [CoTouchlabDroidconandroidUtilsTimeUtils class]) {
    JreStrongAssign(&CoTouchlabDroidconandroidUtilsTimeUtils_TIME_ZONE, JavaUtilTimeZone_getTimeZoneWithNSString_(@"America/New_York"));
    JreStrongAssignAndConsume(&CoTouchlabDroidconandroidUtilsTimeUtils_DATE_FORMAT, new_CoTouchlabDroidconandroidUtilsTimeUtils_$1_init());
    J2OBJC_SET_INITIALIZED(CoTouchlabDroidconandroidUtilsTimeUtils)
  }
}

@end

JavaTextSimpleDateFormat *CoTouchlabDroidconandroidUtilsTimeUtils_makeDateFormatWithNSString_(NSString *format) {
  CoTouchlabDroidconandroidUtilsTimeUtils_initialize();
  JavaTextSimpleDateFormat *simpleDateFormat = create_JavaTextSimpleDateFormat_initWithNSString_withJavaUtilLocale_(format, JreLoadStatic(JavaUtilLocale, US));
  [simpleDateFormat setTimeZoneWithJavaUtilTimeZone:CoTouchlabDroidconandroidUtilsTimeUtils_TIME_ZONE];
  return simpleDateFormat;
}

JavaLangLong *CoTouchlabDroidconandroidUtilsTimeUtils_sanitizeWithJavaUtilDate_(JavaUtilDate *date) {
  CoTouchlabDroidconandroidUtilsTimeUtils_initialize();
  JavaUtilGregorianCalendar *calendar = create_JavaUtilGregorianCalendar_init();
  [calendar setTimeZoneWithJavaUtilTimeZone:CoTouchlabDroidconandroidUtilsTimeUtils_TIME_ZONE];
  [calendar setTimeWithJavaUtilDate:date];
  [calendar setWithInt:JavaUtilCalendar_HOUR_OF_DAY withInt:0];
  [calendar setWithInt:JavaUtilCalendar_MINUTE withInt:0];
  [calendar setWithInt:JavaUtilCalendar_SECOND withInt:0];
  [calendar setWithInt:JavaUtilCalendar_MILLISECOND withInt:0];
  return JavaLangLong_valueOfWithLong_([calendar getTimeInMillis]);
}

void CoTouchlabDroidconandroidUtilsTimeUtils_init(CoTouchlabDroidconandroidUtilsTimeUtils *self) {
  NSObject_init(self);
}

CoTouchlabDroidconandroidUtilsTimeUtils *new_CoTouchlabDroidconandroidUtilsTimeUtils_init() {
  J2OBJC_NEW_IMPL(CoTouchlabDroidconandroidUtilsTimeUtils, init)
}

CoTouchlabDroidconandroidUtilsTimeUtils *create_CoTouchlabDroidconandroidUtilsTimeUtils_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabDroidconandroidUtilsTimeUtils, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabDroidconandroidUtilsTimeUtils)

@implementation CoTouchlabDroidconandroidUtilsTimeUtils_$1

- (JavaTextDateFormat *)initialValue {
  return CoTouchlabDroidconandroidUtilsTimeUtils_makeDateFormatWithNSString_(@"MM/dd/yyyy hh:mma");
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabDroidconandroidUtilsTimeUtils_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaTextDateFormat;", 0x4, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initialValue);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/text/DateFormat;", "LCoTouchlabDroidconandroidUtilsTimeUtils;", "Ljava/lang/ThreadLocal<Ljava/text/DateFormat;>;" };
  static const J2ObjcClassInfo _CoTouchlabDroidconandroidUtilsTimeUtils_$1 = { "", "co.touchlab.droidconandroid.utils", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, -1, 2, -1 };
  return &_CoTouchlabDroidconandroidUtilsTimeUtils_$1;
}

@end

void CoTouchlabDroidconandroidUtilsTimeUtils_$1_init(CoTouchlabDroidconandroidUtilsTimeUtils_$1 *self) {
  JavaLangThreadLocal_init(self);
}

CoTouchlabDroidconandroidUtilsTimeUtils_$1 *new_CoTouchlabDroidconandroidUtilsTimeUtils_$1_init() {
  J2OBJC_NEW_IMPL(CoTouchlabDroidconandroidUtilsTimeUtils_$1, init)
}

CoTouchlabDroidconandroidUtilsTimeUtils_$1 *create_CoTouchlabDroidconandroidUtilsTimeUtils_$1_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabDroidconandroidUtilsTimeUtils_$1, init)
}
