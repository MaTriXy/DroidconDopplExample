//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/temp/DroidconAppSimple/lib/src/main/java/co/touchlab/droidconandroid/tasks/CheckWatchVideoTask.java
//

#include "CoTouchlabDroidconandroidNetworkWatchVideoRequest.h"
#include "DCTAbstractWatchVideoTask.h"
#include "DCTCheckWatchVideoTask.h"
#include "J2ObjC_source.h"
#include "RetrofitClientResponse.h"
#include "java/lang/Long.h"

@interface DCTCheckWatchVideoTask () {
 @public
  jlong eventId_;
}

@end

@implementation DCTCheckWatchVideoTask

- (instancetype)initWithLong:(jlong)eventId {
  DCTCheckWatchVideoTask_initWithLong_(self, eventId);
  return self;
}

- (RetrofitClientResponse *)callVideoUrlWithCoTouchlabDroidconandroidNetworkWatchVideoRequest:(id<CoTouchlabDroidconandroidNetworkWatchVideoRequest>)watchVideoRequest
                                                                                 withNSString:(NSString *)email
                                                                                 withNSString:(NSString *)uuid
                                                                                     withLong:(jlong)conventionId {
  return [((id<CoTouchlabDroidconandroidNetworkWatchVideoRequest>) nil_chk(watchVideoRequest)) checkWatchVideoWithJavaLangLong:JavaLangLong_valueOfWithLong_(conventionId) withNSString:email withNSString:uuid withNSString:JavaLangLong_toStringWithLong_(eventId_)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LRetrofitClientResponse;", 0x0, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithLong:);
  methods[1].selector = @selector(callVideoUrlWithCoTouchlabDroidconandroidNetworkWatchVideoRequest:withNSString:withNSString:withLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "eventId_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "J", "callVideoUrl", "LCoTouchlabDroidconandroidNetworkWatchVideoRequest;LNSString;LNSString;J" };
  static const J2ObjcClassInfo _DCTCheckWatchVideoTask = { "CheckWatchVideoTask", "co.touchlab.droidconandroid.tasks", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_DCTCheckWatchVideoTask;
}

@end

void DCTCheckWatchVideoTask_initWithLong_(DCTCheckWatchVideoTask *self, jlong eventId) {
  DCTAbstractWatchVideoTask_init(self);
  self->eventId_ = eventId;
}

DCTCheckWatchVideoTask *new_DCTCheckWatchVideoTask_initWithLong_(jlong eventId) {
  J2OBJC_NEW_IMPL(DCTCheckWatchVideoTask, initWithLong_, eventId)
}

DCTCheckWatchVideoTask *create_DCTCheckWatchVideoTask_initWithLong_(jlong eventId) {
  J2OBJC_CREATE_IMPL(DCTCheckWatchVideoTask, initWithLong_, eventId)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DCTCheckWatchVideoTask)
