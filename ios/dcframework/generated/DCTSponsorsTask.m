//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidContentContext.h"
#include "CoTouchlabAndroidThreadingEventbusEventBusExt.h"
#include "CoTouchlabAndroidThreadingTasksTask.h"
#include "CoTouchlabDroidconandroidCrashReport.h"
#include "CoTouchlabDroidconandroidSharedNetworkDataHelper.h"
#include "CoTouchlabDroidconandroidSharedNetworkNetworkErrorHandler.h"
#include "CoTouchlabDroidconandroidSharedNetworkSponsorsRequest.h"
#include "CoTouchlabDroidconandroidSharedNetworkSponsorsResult.h"
#include "DCPAppManager.h"
#include "DCPPlatformClient.h"
#include "DCTSponsorsTask.h"
#include "DeGreenrobotEventEventBus.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "RetrofitRestAdapter.h"

@interface DCTSponsorsTask ()

- (NSString *)getFileNameWithInt:(jint)type;

@end

__attribute__((unused)) static NSString *DCTSponsorsTask_getFileNameWithInt_(DCTSponsorsTask *self, jint type);

NSString *DCTSponsorsTask_URL_AMAZON_S3 = @"https://s3.amazonaws.com/";

@implementation DCTSponsorsTask

- (instancetype)initWithInt:(jint)type {
  DCTSponsorsTask_initWithInt_(self, type);
  return self;
}

- (void)runWithAndroidContentContext:(AndroidContentContext *)context {
  RetrofitRestAdapter *restAdapter = [((RetrofitRestAdapter_Builder *) nil_chk(CoTouchlabDroidconandroidSharedNetworkDataHelper_makeRequestAdapterBuilderWithAndroidContentContext_withDCPPlatformClient_withNSString_withRetrofitErrorHandler_(context, DCPAppManager_getPlatformClient(), DCTSponsorsTask_URL_AMAZON_S3, create_CoTouchlabDroidconandroidSharedNetworkNetworkErrorHandler_init()))) build];
  NSString *fileName = DCTSponsorsTask_getFileNameWithInt_(self, type_);
  JreStrongAssign(&response_, [((id<CoTouchlabDroidconandroidSharedNetworkSponsorsRequest>) nil_chk([((RetrofitRestAdapter *) nil_chk(restAdapter)) createWithIOSClass:CoTouchlabDroidconandroidSharedNetworkSponsorsRequest_class_()])) getSponsorsWithNSString:fileName]);
}

- (NSString *)getFileNameWithInt:(jint)type {
  return DCTSponsorsTask_getFileNameWithInt_(self, type);
}

- (jboolean)handleErrorWithAndroidContentContext:(AndroidContentContext *)context
                                 withNSException:(NSException *)throwable {
  CoTouchlabDroidconandroidCrashReport_logExceptionWithNSException_(throwable);
  return true;
}

- (void)onCompleteWithAndroidContentContext:(AndroidContentContext *)context {
  [super onCompleteWithAndroidContentContext:context];
  [((DeGreenrobotEventEventBus *) nil_chk(CoTouchlabAndroidThreadingEventbusEventBusExt_getDefault())) postWithId:self];
}

- (void)dealloc {
  RELEASE_(response_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 4, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 7, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(runWithAndroidContentContext:);
  methods[2].selector = @selector(getFileNameWithInt:);
  methods[3].selector = @selector(handleErrorWithAndroidContentContext:withNSException:);
  methods[4].selector = @selector(onCompleteWithAndroidContentContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SPONSOR_GENERAL", "I", .constantValue.asInt = DCTSponsorsTask_SPONSOR_GENERAL, 0x19, -1, -1, -1, -1 },
    { "SPONSOR_STREAMING", "I", .constantValue.asInt = DCTSponsorsTask_SPONSOR_STREAMING, 0x19, -1, -1, -1, -1 },
    { "SPONSOR_PARTY", "I", .constantValue.asInt = DCTSponsorsTask_SPONSOR_PARTY, 0x19, -1, -1, -1, -1 },
    { "URL_AMAZON_S3", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "type_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "response_", "LCoTouchlabDroidconandroidSharedNetworkSponsorsResult;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "run", "LAndroidContentContext;", "LNSException;", "getFileName", "handleError", "LAndroidContentContext;LNSException;", "onComplete", &DCTSponsorsTask_URL_AMAZON_S3 };
  static const J2ObjcClassInfo _DCTSponsorsTask = { "SponsorsTask", "co.touchlab.droidconandroid.shared.tasks", ptrTable, methods, fields, 7, 0x1, 5, 6, -1, -1, -1, -1, -1 };
  return &_DCTSponsorsTask;
}

@end

void DCTSponsorsTask_initWithInt_(DCTSponsorsTask *self, jint type) {
  CoTouchlabAndroidThreadingTasksTask_init(self);
  self->type_ = type;
}

DCTSponsorsTask *new_DCTSponsorsTask_initWithInt_(jint type) {
  J2OBJC_NEW_IMPL(DCTSponsorsTask, initWithInt_, type)
}

DCTSponsorsTask *create_DCTSponsorsTask_initWithInt_(jint type) {
  J2OBJC_CREATE_IMPL(DCTSponsorsTask, initWithInt_, type)
}

NSString *DCTSponsorsTask_getFileNameWithInt_(DCTSponsorsTask *self, jint type) {
  switch (type) {
    case DCTSponsorsTask_SPONSOR_STREAMING:
    return @"sponsors_stream.json";
    case DCTSponsorsTask_SPONSOR_PARTY:
    return @"sponsors_party.json";
    default:
    return @"sponsors_general.json";
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DCTSponsorsTask)
