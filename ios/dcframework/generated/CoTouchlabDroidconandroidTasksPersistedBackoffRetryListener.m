//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/temp/DroidconAppSimple/lib/src/main/java/co/touchlab/droidconandroid/tasks/persisted/BackoffRetryListener.java
//

#include "AndroidOsHandler.h"
#include "AndroidOsLooper.h"
#include "CoTouchlabAndroidThreadingTasksBaseTaskQueue.h"
#include "CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue.h"
#include "CoTouchlabAndroidThreadingTasksTask.h"
#include "CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener.h"
#include "J2ObjC_source.h"
#include "java/lang/Runnable.h"

@interface CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener () {
 @public
  AndroidOsHandler *handler_;
}

@end

J2OBJC_FIELD_SETTER(CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener, handler_, AndroidOsHandler *)

@interface CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1 : NSObject < JavaLangRunnable > {
 @public
  CoTouchlabAndroidThreadingTasksBaseTaskQueue *val$queue_;
}

- (void)run;

- (instancetype)initWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:(CoTouchlabAndroidThreadingTasksBaseTaskQueue *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1)

J2OBJC_FIELD_SETTER(CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1, val$queue_, CoTouchlabAndroidThreadingTasksBaseTaskQueue *)

__attribute__((unused)) static void CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1_initWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_(CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1 *self, CoTouchlabAndroidThreadingTasksBaseTaskQueue *capture$0);

__attribute__((unused)) static CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1 *new_CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1_initWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_(CoTouchlabAndroidThreadingTasksBaseTaskQueue *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1 *create_CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1_initWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_(CoTouchlabAndroidThreadingTasksBaseTaskQueue *capture$0);

@implementation CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)queueStartedWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:(CoTouchlabAndroidThreadingTasksBaseTaskQueue *)queue {
}

- (void)queueFinishedWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:(CoTouchlabAndroidThreadingTasksBaseTaskQueue *)queue {
  if (retryCount_ < 8 && [((CoTouchlabAndroidThreadingTasksBaseTaskQueue *) nil_chk(queue)) countTasks] > 0) {
    retryCount_++;
    [((AndroidOsHandler *) nil_chk(handler_)) postDelayedWithJavaLangRunnable:create_CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1_initWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_(queue) withLong:5000 * (2 ^ retryCount_)];
  }
  else {
    retryCount_ = 0;
  }
}

- (void)taskStartedWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:(CoTouchlabAndroidThreadingTasksBaseTaskQueue *)queue
                            withCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)task {
}

- (void)taskFinishedWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:(CoTouchlabAndroidThreadingTasksBaseTaskQueue *)queue
                             withCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)task {
}

- (void)dealloc {
  RELEASE_(handler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(queueStartedWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:);
  methods[2].selector = @selector(queueFinishedWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:);
  methods[3].selector = @selector(taskStartedWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:withCoTouchlabAndroidThreadingTasksTask:);
  methods[4].selector = @selector(taskFinishedWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:withCoTouchlabAndroidThreadingTasksTask:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "handler_", "LAndroidOsHandler;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "retryCount_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "queueStarted", "LCoTouchlabAndroidThreadingTasksBaseTaskQueue;", "queueFinished", "taskStarted", "LCoTouchlabAndroidThreadingTasksBaseTaskQueue;LCoTouchlabAndroidThreadingTasksTask;", "taskFinished" };
  static const J2ObjcClassInfo _CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener = { "BackoffRetryListener", "co.touchlab.droidconandroid.tasks.persisted", ptrTable, methods, fields, 7, 0x1, 5, 2, -1, -1, -1, -1, -1 };
  return &_CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener;
}

@end

void CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_init(CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener *self) {
  NSObject_init(self);
  self->retryCount_ = 0;
  JreStrongAssignAndConsume(&self->handler_, new_AndroidOsHandler_initWithAndroidOsLooper_(AndroidOsLooper_getMainLooper()));
}

CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener *new_CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_init() {
  J2OBJC_NEW_IMPL(CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener, init)
}

CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener *create_CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener)

@implementation CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1

- (void)run {
  [((CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *) nil_chk(((CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *) cast_chk(val$queue_, [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue class])))) restartQueue];
}

- (instancetype)initWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:(CoTouchlabAndroidThreadingTasksBaseTaskQueue *)capture$0 {
  CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1_initWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$queue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(run);
  methods[1].selector = @selector(initWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$queue_", "LCoTouchlabAndroidThreadingTasksBaseTaskQueue;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCoTouchlabAndroidThreadingTasksBaseTaskQueue;", "LCoTouchlabDroidconandroidTasksPersistedBackoffRetryListener;", "queueFinishedWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:" };
  static const J2ObjcClassInfo _CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1 = { "", "co.touchlab.droidconandroid.tasks.persisted", ptrTable, methods, fields, 7, 0x8008, 2, 1, 1, -1, 2, -1, -1 };
  return &_CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1;
}

@end

void CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1_initWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_(CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1 *self, CoTouchlabAndroidThreadingTasksBaseTaskQueue *capture$0) {
  JreStrongAssign(&self->val$queue_, capture$0);
  NSObject_init(self);
}

CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1 *new_CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1_initWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_(CoTouchlabAndroidThreadingTasksBaseTaskQueue *capture$0) {
  J2OBJC_NEW_IMPL(CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1, initWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_, capture$0)
}

CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1 *create_CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1_initWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_(CoTouchlabAndroidThreadingTasksBaseTaskQueue *capture$0) {
  J2OBJC_CREATE_IMPL(CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_$1, initWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_, capture$0)
}
