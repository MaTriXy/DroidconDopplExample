//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/temp/DroidconAppSimple/lib/src/main/java/co/touchlab/droidconandroid/tasks/persisted/BackoffRetryListener.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener")
#ifdef RESTRICT_CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener
#define INCLUDE_ALL_CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener 0
#else
#define INCLUDE_ALL_CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener 1
#endif
#undef RESTRICT_CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener

#if !defined (CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_) && (INCLUDE_ALL_CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener || defined(INCLUDE_CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener))
#define CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_

#define RESTRICT_CoTouchlabAndroidThreadingTasksBaseTaskQueue 1
#define INCLUDE_CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueListener 1
#include "CoTouchlabAndroidThreadingTasksBaseTaskQueue.h"

@class CoTouchlabAndroidThreadingTasksBaseTaskQueue;
@class CoTouchlabAndroidThreadingTasksTask;

@interface CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener : NSObject < CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueListener > {
 @public
  jint retryCount_;
}

#pragma mark Public

- (instancetype)init;

- (void)queueFinishedWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:(CoTouchlabAndroidThreadingTasksBaseTaskQueue *)queue;

- (void)queueStartedWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:(CoTouchlabAndroidThreadingTasksBaseTaskQueue *)queue;

- (void)taskFinishedWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:(CoTouchlabAndroidThreadingTasksBaseTaskQueue *)queue
                             withCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)task;

- (void)taskStartedWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:(CoTouchlabAndroidThreadingTasksBaseTaskQueue *)queue
                            withCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)task;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener)

FOUNDATION_EXPORT void CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_init(CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener *self);

FOUNDATION_EXPORT CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener *new_CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener *create_CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener_init();

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener)

#endif

#pragma pop_macro("INCLUDE_ALL_CoTouchlabDroidconandroidTasksPersistedBackoffRetryListener")
