//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/temp/DroidconAppSimple/lib/src/main/java/co/touchlab/droidconandroid/utils/IOUtils.java
//

#include "CoTouchlabDroidconandroidUtilsIOUtils.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/BufferedReader.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/io/OutputStream.h"
#include "java/io/Reader.h"
#include "java/io/StringWriter.h"
#include "java/io/Writer.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@implementation CoTouchlabDroidconandroidUtilsIOUtils

+ (IOSByteArray *)toByteArrayWithJavaIoInputStream:(JavaIoInputStream *)input {
  return CoTouchlabDroidconandroidUtilsIOUtils_toByteArrayWithJavaIoInputStream_(input);
}

+ (jint)copy__WithJavaIoInputStream:(JavaIoInputStream *)input
             withJavaIoOutputStream:(JavaIoOutputStream *)output {
  return CoTouchlabDroidconandroidUtilsIOUtils_copy__WithJavaIoInputStream_withJavaIoOutputStream_(input, output);
}

+ (jlong)copyLargeWithJavaIoInputStream:(JavaIoInputStream *)input
                 withJavaIoOutputStream:(JavaIoOutputStream *)output {
  return CoTouchlabDroidconandroidUtilsIOUtils_copyLargeWithJavaIoInputStream_withJavaIoOutputStream_(input, output);
}

+ (NSString *)toStringWithJavaIoInputStream:(JavaIoInputStream *)input {
  return CoTouchlabDroidconandroidUtilsIOUtils_toStringWithJavaIoInputStream_(input);
}

+ (void)copy__WithJavaIoInputStream:(JavaIoInputStream *)input
                   withJavaIoWriter:(JavaIoWriter *)output {
  CoTouchlabDroidconandroidUtilsIOUtils_copy__WithJavaIoInputStream_withJavaIoWriter_(input, output);
}

+ (jint)copy__WithJavaIoReader:(JavaIoReader *)input
              withJavaIoWriter:(JavaIoWriter *)output {
  return CoTouchlabDroidconandroidUtilsIOUtils_copy__WithJavaIoReader_withJavaIoWriter_(input, output);
}

+ (jlong)copyLargeWithJavaIoReader:(JavaIoReader *)input
                  withJavaIoWriter:(JavaIoWriter *)output {
  return CoTouchlabDroidconandroidUtilsIOUtils_copyLargeWithJavaIoReader_withJavaIoWriter_(input, output);
}

+ (id<JavaUtilList>)readLinesWithJavaIoInputStream:(JavaIoInputStream *)input {
  return CoTouchlabDroidconandroidUtilsIOUtils_readLinesWithJavaIoInputStream_(input);
}

+ (id<JavaUtilList>)readLinesWithJavaIoReader:(JavaIoReader *)input {
  return CoTouchlabDroidconandroidUtilsIOUtils_readLinesWithJavaIoReader_(input);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabDroidconandroidUtilsIOUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[B", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "I", 0x9, 3, 4, 2, -1, -1, -1 },
    { NULL, "J", 0x9, 5, 4, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 6, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x9, 3, 7, 2, -1, -1, -1 },
    { NULL, "I", 0x9, 3, 8, 2, -1, -1, -1 },
    { NULL, "J", 0x9, 5, 8, 2, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 9, 1, 2, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 9, 10, 2, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(toByteArrayWithJavaIoInputStream:);
  methods[1].selector = @selector(copy__WithJavaIoInputStream:withJavaIoOutputStream:);
  methods[2].selector = @selector(copyLargeWithJavaIoInputStream:withJavaIoOutputStream:);
  methods[3].selector = @selector(toStringWithJavaIoInputStream:);
  methods[4].selector = @selector(copy__WithJavaIoInputStream:withJavaIoWriter:);
  methods[5].selector = @selector(copy__WithJavaIoReader:withJavaIoWriter:);
  methods[6].selector = @selector(copyLargeWithJavaIoReader:withJavaIoWriter:);
  methods[7].selector = @selector(readLinesWithJavaIoInputStream:);
  methods[8].selector = @selector(readLinesWithJavaIoReader:);
  methods[9].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "toByteArray", "LJavaIoInputStream;", "LJavaIoIOException;", "copy", "LJavaIoInputStream;LJavaIoOutputStream;", "copyLarge", "toString", "LJavaIoInputStream;LJavaIoWriter;", "LJavaIoReader;LJavaIoWriter;", "readLines", "LJavaIoReader;" };
  static const J2ObjcClassInfo _CoTouchlabDroidconandroidUtilsIOUtils = { "IOUtils", "co.touchlab.droidconandroid.utils", ptrTable, methods, NULL, 7, 0x1, 10, 0, -1, -1, -1, -1, -1 };
  return &_CoTouchlabDroidconandroidUtilsIOUtils;
}

@end

IOSByteArray *CoTouchlabDroidconandroidUtilsIOUtils_toByteArrayWithJavaIoInputStream_(JavaIoInputStream *input) {
  CoTouchlabDroidconandroidUtilsIOUtils_initialize();
  JavaIoByteArrayOutputStream *output = create_JavaIoByteArrayOutputStream_init();
  CoTouchlabDroidconandroidUtilsIOUtils_copy__WithJavaIoInputStream_withJavaIoOutputStream_(input, output);
  return [output toByteArray];
}

jint CoTouchlabDroidconandroidUtilsIOUtils_copy__WithJavaIoInputStream_withJavaIoOutputStream_(JavaIoInputStream *input, JavaIoOutputStream *output) {
  CoTouchlabDroidconandroidUtilsIOUtils_initialize();
  jlong count = CoTouchlabDroidconandroidUtilsIOUtils_copyLargeWithJavaIoInputStream_withJavaIoOutputStream_(input, output);
  return count > 2147483647LL ? -1 : (jint) count;
}

jlong CoTouchlabDroidconandroidUtilsIOUtils_copyLargeWithJavaIoInputStream_withJavaIoOutputStream_(JavaIoInputStream *input, JavaIoOutputStream *output) {
  CoTouchlabDroidconandroidUtilsIOUtils_initialize();
  IOSByteArray *buffer = [IOSByteArray arrayWithLength:4096];
  jlong count = 0LL;
  jint n1;
  for (jboolean n = false; -1 != (n1 = [((JavaIoInputStream *) nil_chk(input)) readWithByteArray:buffer]); count += (jlong) n1) {
    [((JavaIoOutputStream *) nil_chk(output)) writeWithByteArray:buffer withInt:0 withInt:n1];
  }
  return count;
}

NSString *CoTouchlabDroidconandroidUtilsIOUtils_toStringWithJavaIoInputStream_(JavaIoInputStream *input) {
  CoTouchlabDroidconandroidUtilsIOUtils_initialize();
  JavaIoStringWriter *sw = create_JavaIoStringWriter_init();
  CoTouchlabDroidconandroidUtilsIOUtils_copy__WithJavaIoInputStream_withJavaIoWriter_(input, sw);
  return [sw description];
}

void CoTouchlabDroidconandroidUtilsIOUtils_copy__WithJavaIoInputStream_withJavaIoWriter_(JavaIoInputStream *input, JavaIoWriter *output) {
  CoTouchlabDroidconandroidUtilsIOUtils_initialize();
  JavaIoInputStreamReader *in = create_JavaIoInputStreamReader_initWithJavaIoInputStream_(input);
  CoTouchlabDroidconandroidUtilsIOUtils_copy__WithJavaIoReader_withJavaIoWriter_(in, output);
}

jint CoTouchlabDroidconandroidUtilsIOUtils_copy__WithJavaIoReader_withJavaIoWriter_(JavaIoReader *input, JavaIoWriter *output) {
  CoTouchlabDroidconandroidUtilsIOUtils_initialize();
  jlong count = CoTouchlabDroidconandroidUtilsIOUtils_copyLargeWithJavaIoReader_withJavaIoWriter_(input, output);
  return count > 2147483647LL ? -1 : (jint) count;
}

jlong CoTouchlabDroidconandroidUtilsIOUtils_copyLargeWithJavaIoReader_withJavaIoWriter_(JavaIoReader *input, JavaIoWriter *output) {
  CoTouchlabDroidconandroidUtilsIOUtils_initialize();
  IOSCharArray *buffer = [IOSCharArray arrayWithLength:4096];
  jlong count = 0LL;
  jint n1;
  for (jboolean n = false; -1 != (n1 = [((JavaIoReader *) nil_chk(input)) readWithCharArray:buffer]); count += (jlong) n1) {
    [((JavaIoWriter *) nil_chk(output)) writeWithCharArray:buffer withInt:0 withInt:n1];
  }
  return count;
}

id<JavaUtilList> CoTouchlabDroidconandroidUtilsIOUtils_readLinesWithJavaIoInputStream_(JavaIoInputStream *input) {
  CoTouchlabDroidconandroidUtilsIOUtils_initialize();
  JavaIoInputStreamReader *reader = create_JavaIoInputStreamReader_initWithJavaIoInputStream_(input);
  return CoTouchlabDroidconandroidUtilsIOUtils_readLinesWithJavaIoReader_(reader);
}

id<JavaUtilList> CoTouchlabDroidconandroidUtilsIOUtils_readLinesWithJavaIoReader_(JavaIoReader *input) {
  CoTouchlabDroidconandroidUtilsIOUtils_initialize();
  JavaIoBufferedReader *reader = create_JavaIoBufferedReader_initWithJavaIoReader_(input);
  JavaUtilArrayList *list = create_JavaUtilArrayList_init();
  for (NSString *line = [reader readLine]; line != nil; line = [reader readLine]) {
    [list addWithId:line];
  }
  return list;
}

void CoTouchlabDroidconandroidUtilsIOUtils_init(CoTouchlabDroidconandroidUtilsIOUtils *self) {
  NSObject_init(self);
}

CoTouchlabDroidconandroidUtilsIOUtils *new_CoTouchlabDroidconandroidUtilsIOUtils_init() {
  J2OBJC_NEW_IMPL(CoTouchlabDroidconandroidUtilsIOUtils, init)
}

CoTouchlabDroidconandroidUtilsIOUtils *create_CoTouchlabDroidconandroidUtilsIOUtils_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabDroidconandroidUtilsIOUtils, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabDroidconandroidUtilsIOUtils)
