//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/DroidconDopplExample/lib/src/main/java/co/touchlab/droidconandroid/presenter/AppManager.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DCPAppManager")
#ifdef RESTRICT_DCPAppManager
#define INCLUDE_ALL_DCPAppManager 0
#else
#define INCLUDE_ALL_DCPAppManager 1
#endif
#undef RESTRICT_DCPAppManager

#if !defined (DCPAppManager_) && (INCLUDE_ALL_DCPAppManager || defined(INCLUDE_DCPAppManager))
#define DCPAppManager_

@class AndroidContentContext;
@class DCDAppPrefs;
@class DCPAppManager_AppScreens;
@protocol DCPAppManager_LoadDataSeed;
@protocol DCPPlatformClient;

@interface DCPAppManager : NSObject

#pragma mark Public

- (instancetype)init;

+ (DCPAppManager_AppScreens *)findStartScreen;

+ (DCDAppPrefs *)getAppPrefs;

+ (AndroidContentContext *)getContext;

+ (id<DCPPlatformClient>)getPlatformClient;

+ (void)initContextWithAndroidContentContext:(AndroidContentContext *)context
                       withDCPPlatformClient:(id<DCPPlatformClient>)platformClient
              withDCPAppManager_LoadDataSeed:(id<DCPAppManager_LoadDataSeed>)loadDataSeed OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(DCPAppManager)

inline NSString *DCPAppManager_get_FIRST_SEED();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *DCPAppManager_FIRST_SEED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(DCPAppManager, FIRST_SEED, NSString *)

FOUNDATION_EXPORT void DCPAppManager_init(DCPAppManager *self);

FOUNDATION_EXPORT DCPAppManager *new_DCPAppManager_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DCPAppManager *create_DCPAppManager_init();

FOUNDATION_EXPORT void DCPAppManager_initContextWithAndroidContentContext_withDCPPlatformClient_withDCPAppManager_LoadDataSeed_(AndroidContentContext *context, id<DCPPlatformClient> platformClient, id<DCPAppManager_LoadDataSeed> loadDataSeed);

FOUNDATION_EXPORT AndroidContentContext *DCPAppManager_getContext();

FOUNDATION_EXPORT id<DCPPlatformClient> DCPAppManager_getPlatformClient();

FOUNDATION_EXPORT DCPAppManager_AppScreens *DCPAppManager_findStartScreen();

FOUNDATION_EXPORT DCDAppPrefs *DCPAppManager_getAppPrefs();

J2OBJC_TYPE_LITERAL_HEADER(DCPAppManager)

@compatibility_alias CoTouchlabDroidconandroidPresenterAppManager DCPAppManager;

#endif

#if !defined (DCPAppManager_LoadDataSeed_) && (INCLUDE_ALL_DCPAppManager || defined(INCLUDE_DCPAppManager_LoadDataSeed))
#define DCPAppManager_LoadDataSeed_

@protocol DCPAppManager_LoadDataSeed < JavaObject >

- (NSString *)dataSeed;

@end

J2OBJC_EMPTY_STATIC_INIT(DCPAppManager_LoadDataSeed)

J2OBJC_TYPE_LITERAL_HEADER(DCPAppManager_LoadDataSeed)

#endif

#if !defined (DCPAppManager_AppScreens_) && (INCLUDE_ALL_DCPAppManager || defined(INCLUDE_DCPAppManager_AppScreens))
#define DCPAppManager_AppScreens_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, DCPAppManager_AppScreens_Enum) {
  DCPAppManager_AppScreens_Enum_Welcome = 0,
  DCPAppManager_AppScreens_Enum_Schedule = 1,
};

@interface DCPAppManager_AppScreens : JavaLangEnum < NSCopying >

#pragma mark Public

+ (DCPAppManager_AppScreens *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(DCPAppManager_AppScreens)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT DCPAppManager_AppScreens *DCPAppManager_AppScreens_values_[];

inline DCPAppManager_AppScreens *DCPAppManager_AppScreens_get_Welcome();
J2OBJC_ENUM_CONSTANT(DCPAppManager_AppScreens, Welcome)

inline DCPAppManager_AppScreens *DCPAppManager_AppScreens_get_Schedule();
J2OBJC_ENUM_CONSTANT(DCPAppManager_AppScreens, Schedule)

FOUNDATION_EXPORT IOSObjectArray *DCPAppManager_AppScreens_values();

FOUNDATION_EXPORT DCPAppManager_AppScreens *DCPAppManager_AppScreens_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT DCPAppManager_AppScreens *DCPAppManager_AppScreens_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(DCPAppManager_AppScreens)

#endif

#pragma pop_macro("INCLUDE_ALL_DCPAppManager")
