//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/DroidconDopplExample/lib/src/main/java/co/touchlab/droidconandroid/tasks/EventVideoDetailsTask.java
//

#include "AndroidContentContext.h"
#include "CoTouchlabAndroidThreadingEventbusEventBusExt.h"
#include "CoTouchlabAndroidThreadingTasksTask.h"
#include "CoTouchlabDroidconandroidCrashReport.h"
#include "CoTouchlabDroidconandroidNetworkDaoEventVideoDetails.h"
#include "CoTouchlabDroidconandroidNetworkDataHelper.h"
#include "CoTouchlabDroidconandroidNetworkRefreshScheduleDataRequest.h"
#include "CoTouchlabDroidconandroidUtilsStringUtils.h"
#include "DCPAppManager.h"
#include "DCPPlatformClient.h"
#include "DCTEventVideoDetailsTask.h"
#include "DeGreenrobotEventEventBus.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "RetrofitRestAdapter.h"
#include "java/lang/Long.h"

@interface DCTEventVideoDetailsTask () {
 @public
  jlong eventId_;
  CoTouchlabDroidconandroidNetworkDaoEventVideoDetails *eventVideoDetails_;
}

@end

J2OBJC_FIELD_SETTER(DCTEventVideoDetailsTask, eventVideoDetails_, CoTouchlabDroidconandroidNetworkDaoEventVideoDetails *)

@implementation DCTEventVideoDetailsTask

- (instancetype)initWithLong:(jlong)eventId {
  DCTEventVideoDetailsTask_initWithLong_(self, eventId);
  return self;
}

- (jlong)getEventId {
  return eventId_;
}

- (CoTouchlabDroidconandroidNetworkDaoEventVideoDetails *)getEventVideoDetails {
  return eventVideoDetails_;
}

- (void)onCompleteWithAndroidContentContext:(AndroidContentContext *)context {
  [((DeGreenrobotEventEventBus *) nil_chk(CoTouchlabAndroidThreadingEventbusEventBusExt_getDefault())) postWithId:self];
}

- (void)runWithAndroidContentContext:(AndroidContentContext *)context {
  RetrofitRestAdapter *restAdapter = CoTouchlabDroidconandroidNetworkDataHelper_makeRequestAdapterWithAndroidContentContext_withDCPPlatformClient_(context, DCPAppManager_getPlatformClient());
  id<CoTouchlabDroidconandroidNetworkRefreshScheduleDataRequest> refreshScheduleDataRequest = [((RetrofitRestAdapter *) nil_chk(restAdapter)) createWithIOSClass:CoTouchlabDroidconandroidNetworkRefreshScheduleDataRequest_class_()];
  JreStrongAssign(&eventVideoDetails_, [((id<CoTouchlabDroidconandroidNetworkRefreshScheduleDataRequest>) nil_chk(refreshScheduleDataRequest)) getEventVideoDetailsWithJavaLangLong:JavaLangLong_valueOfWithLong_(eventId_)]);
}

- (jboolean)handleErrorWithAndroidContentContext:(AndroidContentContext *)context
                                 withNSException:(NSException *)throwable {
  CoTouchlabDroidconandroidCrashReport_logExceptionWithNSException_(throwable);
  return true;
}

- (jboolean)hasStream {
  return eventVideoDetails_ != nil && (CoTouchlabDroidconandroidUtilsStringUtils_isNotEmptyWithNSString_([eventVideoDetails_ getStreamLink]) || CoTouchlabDroidconandroidUtilsStringUtils_isNotEmptyWithNSString_([((CoTouchlabDroidconandroidNetworkDaoEventVideoDetails *) nil_chk(eventVideoDetails_)) getStreamArchiveLink]));
}

- (jboolean)isNow {
  return eventVideoDetails_ != nil && CoTouchlabDroidconandroidUtilsStringUtils_isNotEmptyWithNSString_([eventVideoDetails_ getStreamLink]);
}

- (NSString *)getMergedStreamLink {
  if (eventVideoDetails_ == nil) return nil;
  return CoTouchlabDroidconandroidUtilsStringUtils_isNotEmptyWithNSString_([eventVideoDetails_ getStreamLink]) ? [((CoTouchlabDroidconandroidNetworkDaoEventVideoDetails *) nil_chk(eventVideoDetails_)) getStreamLink] : [((CoTouchlabDroidconandroidNetworkDaoEventVideoDetails *) nil_chk(eventVideoDetails_)) getStreamArchiveLink];
}

- (void)dealloc {
  RELEASE_(eventVideoDetails_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCoTouchlabDroidconandroidNetworkDaoEventVideoDetails;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 3, 2, 4, -1, -1, -1 },
    { NULL, "Z", 0x4, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithLong:);
  methods[1].selector = @selector(getEventId);
  methods[2].selector = @selector(getEventVideoDetails);
  methods[3].selector = @selector(onCompleteWithAndroidContentContext:);
  methods[4].selector = @selector(runWithAndroidContentContext:);
  methods[5].selector = @selector(handleErrorWithAndroidContentContext:withNSException:);
  methods[6].selector = @selector(hasStream);
  methods[7].selector = @selector(isNow);
  methods[8].selector = @selector(getMergedStreamLink);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "eventId_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "eventVideoDetails_", "LCoTouchlabDroidconandroidNetworkDaoEventVideoDetails;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "J", "onComplete", "LAndroidContentContext;", "run", "LNSException;", "handleError", "LAndroidContentContext;LNSException;" };
  static const J2ObjcClassInfo _DCTEventVideoDetailsTask = { "EventVideoDetailsTask", "co.touchlab.droidconandroid.tasks", ptrTable, methods, fields, 7, 0x1, 9, 2, -1, -1, -1, -1, -1 };
  return &_DCTEventVideoDetailsTask;
}

@end

void DCTEventVideoDetailsTask_initWithLong_(DCTEventVideoDetailsTask *self, jlong eventId) {
  CoTouchlabAndroidThreadingTasksTask_init(self);
  self->eventId_ = eventId;
}

DCTEventVideoDetailsTask *new_DCTEventVideoDetailsTask_initWithLong_(jlong eventId) {
  J2OBJC_NEW_IMPL(DCTEventVideoDetailsTask, initWithLong_, eventId)
}

DCTEventVideoDetailsTask *create_DCTEventVideoDetailsTask_initWithLong_(jlong eventId) {
  J2OBJC_CREATE_IMPL(DCTEventVideoDetailsTask, initWithLong_, eventId)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DCTEventVideoDetailsTask)
