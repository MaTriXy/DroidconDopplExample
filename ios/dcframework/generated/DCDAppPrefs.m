//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/DroidconDopplExample/lib/src/main/java/co/touchlab/droidconandroid/data/AppPrefs.java
//

#include "AndroidContentContext.h"
#include "AndroidContentSharedPreferences.h"
#include "CoTouchlabDroidconandroidUtilsStringUtils.h"
#include "DCDAppPrefs.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Long.h"
#include "java/util/UUID.h"

@interface DCDAppPrefs () {
 @public
  id<AndroidContentSharedPreferences> prefs_;
}

- (void)setBooleanWithNSString:(NSString *)key
           withJavaLangBoolean:(JavaLangBoolean *)value;

- (void)setStringWithNSString:(NSString *)key
                 withNSString:(NSString *)value;

- (void)setLongWithNSString:(NSString *)key
           withJavaLangLong:(JavaLangLong *)value;

@end

J2OBJC_FIELD_SETTER(DCDAppPrefs, prefs_, id<AndroidContentSharedPreferences>)

inline DCDAppPrefs *DCDAppPrefs_get_instance();
inline DCDAppPrefs *DCDAppPrefs_set_instance(DCDAppPrefs *value);
static DCDAppPrefs *DCDAppPrefs_instance;
J2OBJC_STATIC_FIELD_OBJ(DCDAppPrefs, instance, DCDAppPrefs *)

__attribute__((unused)) static void DCDAppPrefs_setBooleanWithNSString_withJavaLangBoolean_(DCDAppPrefs *self, NSString *key, JavaLangBoolean *value);

__attribute__((unused)) static void DCDAppPrefs_setStringWithNSString_withNSString_(DCDAppPrefs *self, NSString *key, NSString *value);

__attribute__((unused)) static void DCDAppPrefs_setLongWithNSString_withJavaLangLong_(DCDAppPrefs *self, NSString *key, JavaLangLong *value);

NSString *DCDAppPrefs_SEEN_WELCOME = @"seen_welcome";
NSString *DCDAppPrefs_EVENTBRITE_EMAIL = @"EVENTBRITE_EMAIL";
NSString *DCDAppPrefs_CONVENTION_START = @"convention_start";
NSString *DCDAppPrefs_CONVENTION_END = @"convention_end";
NSString *DCDAppPrefs_REFRESH_TIME = @"refresh_time";
NSString *DCDAppPrefs_ALLOW_NOTIFS = @"allow_notifs";
NSString *DCDAppPrefs_SHOW_NOTIF_CARD = @"show_notif_card";
NSString *DCDAppPrefs_VIDEO_DEVICE_ID = @"VIDEO_DEVICE_ID";
NSString *DCDAppPrefs_SHOW_SLACK_DIALOG = @"show_slack_dialog";

@implementation DCDAppPrefs

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DCDAppPrefs_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (DCDAppPrefs *)getInstanceWithAndroidContentContext:(AndroidContentContext *)context {
  return DCDAppPrefs_getInstanceWithAndroidContentContext_(context);
}

- (jboolean)onceWithNSString:(NSString *)key {
  JavaLangBoolean *shouldOnce = JavaLangBoolean_valueOfWithBoolean_([((id<AndroidContentSharedPreferences>) nil_chk(prefs_)) getBooleanWithNSString:key withBoolean:true]);
  DCDAppPrefs_setBooleanWithNSString_withJavaLangBoolean_(self, key, JavaLangBoolean_valueOfWithBoolean_(false));
  return [shouldOnce booleanValue];
}

- (jboolean)getHasSeenWelcome {
  return [((id<AndroidContentSharedPreferences>) nil_chk(prefs_)) getBooleanWithNSString:DCDAppPrefs_SEEN_WELCOME withBoolean:false];
}

- (void)setHasSeenWelcome {
  DCDAppPrefs_setBooleanWithNSString_withJavaLangBoolean_(self, DCDAppPrefs_SEEN_WELCOME, JavaLangBoolean_valueOfWithBoolean_(true));
}

- (void)setEventbriteEmailWithNSString:(NSString *)email {
  if (CoTouchlabDroidconandroidUtilsStringUtils_isEmptyWithNSString_(email)) [((id<AndroidContentSharedPreferences_Editor>) nil_chk([((id<AndroidContentSharedPreferences_Editor>) nil_chk([((id<AndroidContentSharedPreferences>) nil_chk(prefs_)) edit])) removeWithNSString:DCDAppPrefs_EVENTBRITE_EMAIL])) apply];
  else DCDAppPrefs_setStringWithNSString_withNSString_(self, DCDAppPrefs_EVENTBRITE_EMAIL, email);
}

- (NSString *)getEventbriteEmail {
  return [((id<AndroidContentSharedPreferences>) nil_chk(prefs_)) getStringWithNSString:DCDAppPrefs_EVENTBRITE_EMAIL withNSString:nil];
}

- (void)setConventionStartDateWithNSString:(NSString *)startDate {
  DCDAppPrefs_setStringWithNSString_withNSString_(self, DCDAppPrefs_CONVENTION_START, startDate);
}

- (NSString *)getConventionStartDate {
  return [((id<AndroidContentSharedPreferences>) nil_chk(prefs_)) getStringWithNSString:DCDAppPrefs_CONVENTION_START withNSString:nil];
}

- (void)setConventionEndDateWithNSString:(NSString *)endDate {
  DCDAppPrefs_setStringWithNSString_withNSString_(self, DCDAppPrefs_CONVENTION_END, endDate);
}

- (NSString *)getVideoDeviceId {
  NSString *deviceId = [((id<AndroidContentSharedPreferences>) nil_chk(prefs_)) getStringWithNSString:DCDAppPrefs_VIDEO_DEVICE_ID withNSString:nil];
  if (deviceId == nil) {
    deviceId = [((JavaUtilUUID *) nil_chk(JavaUtilUUID_randomUUID())) description];
    DCDAppPrefs_setStringWithNSString_withNSString_(self, DCDAppPrefs_VIDEO_DEVICE_ID, deviceId);
  }
  return deviceId;
}

- (NSString *)getConventionEndDate {
  return [((id<AndroidContentSharedPreferences>) nil_chk(prefs_)) getStringWithNSString:DCDAppPrefs_CONVENTION_END withNSString:nil];
}

- (void)setRefreshTimeWithLong:(jlong)time {
  DCDAppPrefs_setLongWithNSString_withJavaLangLong_(self, DCDAppPrefs_REFRESH_TIME, JavaLangLong_valueOfWithLong_(time));
}

- (jlong)getRefreshTime {
  return [((id<AndroidContentSharedPreferences>) nil_chk(prefs_)) getLongWithNSString:DCDAppPrefs_REFRESH_TIME withLong:0];
}

- (jboolean)getShowSlackDialog {
  return [((id<AndroidContentSharedPreferences>) nil_chk(prefs_)) getBooleanWithNSString:DCDAppPrefs_SHOW_SLACK_DIALOG withBoolean:true];
}

- (void)setShowSlackDialogWithBoolean:(jboolean)show {
  DCDAppPrefs_setBooleanWithNSString_withJavaLangBoolean_(self, DCDAppPrefs_SHOW_SLACK_DIALOG, JavaLangBoolean_valueOfWithBoolean_(show));
}

- (jboolean)getAllowNotifications {
  return [((id<AndroidContentSharedPreferences>) nil_chk(prefs_)) getBooleanWithNSString:DCDAppPrefs_ALLOW_NOTIFS withBoolean:false];
}

- (void)setAllowNotificationsWithBoolean:(jboolean)allow {
  [((id<AndroidContentSharedPreferences_Editor>) nil_chk([((id<AndroidContentSharedPreferences_Editor>) nil_chk([((id<AndroidContentSharedPreferences>) nil_chk(prefs_)) edit])) putBooleanWithNSString:DCDAppPrefs_ALLOW_NOTIFS withBoolean:allow])) apply];
}

- (jboolean)getShowNotifCard {
  return [((id<AndroidContentSharedPreferences>) nil_chk(prefs_)) getBooleanWithNSString:DCDAppPrefs_SHOW_NOTIF_CARD withBoolean:true];
}

- (void)setShowNotifCardWithBoolean:(jboolean)show {
  [((id<AndroidContentSharedPreferences_Editor>) nil_chk([((id<AndroidContentSharedPreferences_Editor>) nil_chk([((id<AndroidContentSharedPreferences>) nil_chk(prefs_)) edit])) putBooleanWithNSString:DCDAppPrefs_SHOW_NOTIF_CARD withBoolean:show])) apply];
}

- (void)setBooleanWithNSString:(NSString *)key
           withJavaLangBoolean:(JavaLangBoolean *)value {
  DCDAppPrefs_setBooleanWithNSString_withJavaLangBoolean_(self, key, value);
}

- (void)setStringWithNSString:(NSString *)key
                 withNSString:(NSString *)value {
  DCDAppPrefs_setStringWithNSString_withNSString_(self, key, value);
}

- (void)setLongWithNSString:(NSString *)key
           withJavaLangLong:(JavaLangLong *)value {
  DCDAppPrefs_setLongWithNSString_withJavaLangLong_(self, key, value);
}

- (void)dealloc {
  RELEASE_(prefs_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LDCDAppPrefs;", 0x29, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 17, 18, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getInstanceWithAndroidContentContext:);
  methods[2].selector = @selector(onceWithNSString:);
  methods[3].selector = @selector(getHasSeenWelcome);
  methods[4].selector = @selector(setHasSeenWelcome);
  methods[5].selector = @selector(setEventbriteEmailWithNSString:);
  methods[6].selector = @selector(getEventbriteEmail);
  methods[7].selector = @selector(setConventionStartDateWithNSString:);
  methods[8].selector = @selector(getConventionStartDate);
  methods[9].selector = @selector(setConventionEndDateWithNSString:);
  methods[10].selector = @selector(getVideoDeviceId);
  methods[11].selector = @selector(getConventionEndDate);
  methods[12].selector = @selector(setRefreshTimeWithLong:);
  methods[13].selector = @selector(getRefreshTime);
  methods[14].selector = @selector(getShowSlackDialog);
  methods[15].selector = @selector(setShowSlackDialogWithBoolean:);
  methods[16].selector = @selector(getAllowNotifications);
  methods[17].selector = @selector(setAllowNotificationsWithBoolean:);
  methods[18].selector = @selector(getShowNotifCard);
  methods[19].selector = @selector(setShowNotifCardWithBoolean:);
  methods[20].selector = @selector(setBooleanWithNSString:withJavaLangBoolean:);
  methods[21].selector = @selector(setStringWithNSString:withNSString:);
  methods[22].selector = @selector(setLongWithNSString:withJavaLangLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SEEN_WELCOME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 19, -1, -1 },
    { "EVENTBRITE_EMAIL", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 20, -1, -1 },
    { "CONVENTION_START", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 21, -1, -1 },
    { "CONVENTION_END", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 22, -1, -1 },
    { "REFRESH_TIME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 23, -1, -1 },
    { "ALLOW_NOTIFS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 24, -1, -1 },
    { "SHOW_NOTIF_CARD", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 25, -1, -1 },
    { "VIDEO_DEVICE_ID", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 26, -1, -1 },
    { "SHOW_SLACK_DIALOG", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 27, -1, -1 },
    { "instance", "LDCDAppPrefs;", .constantValue.asLong = 0, 0xa, -1, 28, -1, -1 },
    { "prefs_", "LAndroidContentSharedPreferences;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LAndroidContentContext;", "once", "LNSString;", "setEventbriteEmail", "setConventionStartDate", "setConventionEndDate", "setRefreshTime", "J", "setShowSlackDialog", "Z", "setAllowNotifications", "setShowNotifCard", "setBoolean", "LNSString;LJavaLangBoolean;", "setString", "LNSString;LNSString;", "setLong", "LNSString;LJavaLangLong;", &DCDAppPrefs_SEEN_WELCOME, &DCDAppPrefs_EVENTBRITE_EMAIL, &DCDAppPrefs_CONVENTION_START, &DCDAppPrefs_CONVENTION_END, &DCDAppPrefs_REFRESH_TIME, &DCDAppPrefs_ALLOW_NOTIFS, &DCDAppPrefs_SHOW_NOTIF_CARD, &DCDAppPrefs_VIDEO_DEVICE_ID, &DCDAppPrefs_SHOW_SLACK_DIALOG, &DCDAppPrefs_instance };
  static const J2ObjcClassInfo _DCDAppPrefs = { "AppPrefs", "co.touchlab.droidconandroid.data", ptrTable, methods, fields, 7, 0x1, 23, 11, -1, -1, -1, -1, -1 };
  return &_DCDAppPrefs;
}

@end

void DCDAppPrefs_init(DCDAppPrefs *self) {
  NSObject_init(self);
}

DCDAppPrefs *new_DCDAppPrefs_init() {
  J2OBJC_NEW_IMPL(DCDAppPrefs, init)
}

DCDAppPrefs *create_DCDAppPrefs_init() {
  J2OBJC_CREATE_IMPL(DCDAppPrefs, init)
}

DCDAppPrefs *DCDAppPrefs_getInstanceWithAndroidContentContext_(AndroidContentContext *context) {
  DCDAppPrefs_initialize();
  @synchronized(DCDAppPrefs_class_()) {
    if (DCDAppPrefs_instance == nil) {
      JreStrongAssignAndConsume(&DCDAppPrefs_instance, new_DCDAppPrefs_init());
      JreStrongAssign(&DCDAppPrefs_instance->prefs_, [((AndroidContentContext *) nil_chk(context)) getSharedPreferencesWithNSString:@"APP_PREFS" withInt:AndroidContentContext_MODE_PRIVATE]);
    }
    return DCDAppPrefs_instance;
  }
}

void DCDAppPrefs_setBooleanWithNSString_withJavaLangBoolean_(DCDAppPrefs *self, NSString *key, JavaLangBoolean *value) {
  [((id<AndroidContentSharedPreferences_Editor>) nil_chk([((id<AndroidContentSharedPreferences_Editor>) nil_chk([((id<AndroidContentSharedPreferences>) nil_chk(self->prefs_)) edit])) putBooleanWithNSString:key withBoolean:[((JavaLangBoolean *) nil_chk(value)) booleanValue]])) apply];
}

void DCDAppPrefs_setStringWithNSString_withNSString_(DCDAppPrefs *self, NSString *key, NSString *value) {
  [((id<AndroidContentSharedPreferences_Editor>) nil_chk([((id<AndroidContentSharedPreferences_Editor>) nil_chk([((id<AndroidContentSharedPreferences>) nil_chk(self->prefs_)) edit])) putStringWithNSString:key withNSString:value])) apply];
}

void DCDAppPrefs_setLongWithNSString_withJavaLangLong_(DCDAppPrefs *self, NSString *key, JavaLangLong *value) {
  [((id<AndroidContentSharedPreferences_Editor>) nil_chk([((id<AndroidContentSharedPreferences_Editor>) nil_chk([((id<AndroidContentSharedPreferences>) nil_chk(self->prefs_)) edit])) putLongWithNSString:key withLong:[((JavaLangLong *) nil_chk(value)) longLongValue]])) apply];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DCDAppPrefs)
