//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/MagicThreads-doppl/library/src/main/java/co/touchlab/android/threading/tasks/persisted/PersistedTaskQueue.java
//

#include "AndroidAppApplication.h"
#include "AndroidOsHandler.h"
#include "AndroidOsMessage.h"
#include "CoTouchlabAndroidThreadingErrorcontrolSoftException.h"
#include "CoTouchlabAndroidThreadingTasksBaseTaskQueue.h"
#include "CoTouchlabAndroidThreadingTasksPersistedBusLog.h"
#include "CoTouchlabAndroidThreadingTasksPersistedCommandPurgePolicy.h"
#include "CoTouchlabAndroidThreadingTasksPersistedPersistedTask.h"
#include "CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue.h"
#include "CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig.h"
#include "CoTouchlabAndroidThreadingTasksPersistedPersistenceProvider.h"
#include "CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException.h"
#include "CoTouchlabAndroidThreadingTasksTask.h"
#include "CoTouchlabAndroidThreadingUtilsUiThreadContext.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/Error.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Runnable.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/PriorityQueue.h"
#include "java/util/Queue.h"
#include "java/util/concurrent/ExecutorService.h"

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue () {
 @public
  id<JavaUtilQueue> addingTasks_;
  id<JavaUtilQueue> pendingTasks_;
  id<CoTouchlabAndroidThreadingTasksPersistedPersistenceProvider> provider_;
  id<CoTouchlabAndroidThreadingTasksPersistedCommandPurgePolicy> commandPurgePolicy_;
  id<CoTouchlabAndroidThreadingTasksPersistedBusLog> log_;
}

- (void)callExecuteWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)task;

- (jboolean)checkHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)c;

- (jboolean)checkCollectionHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)c
                                                                          withJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (void)callCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask;

- (void)logQueueState;

- (void)logCommandVerboseWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask
                                                                      withNSString:(NSString *)methodName;

- (void)logTransientExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)c
                                                                       withNSException:(NSException *)e;

- (void)logPermanentExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)c
                                                                       withNSException:(NSException *)e;

- (void)runInBackgroundWithJavaLangRunnable:(id<JavaLangRunnable>)r;

@end

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, addingTasks_, id<JavaUtilQueue>)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, pendingTasks_, id<JavaUtilQueue>)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, provider_, id<CoTouchlabAndroidThreadingTasksPersistedPersistenceProvider>)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, commandPurgePolicy_, id<CoTouchlabAndroidThreadingTasksPersistedCommandPurgePolicy>)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, log_, id<CoTouchlabAndroidThreadingTasksPersistedBusLog>)

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_callExecuteWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *task);

__attribute__((unused)) static jboolean CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_checkHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c);

__attribute__((unused)) static jboolean CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_checkCollectionHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withJavaUtilCollection_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, id<JavaUtilCollection> collection);

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_callCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *persistedTask);

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logCommandVerboseWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSString_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *persistedTask, NSString *methodName);

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logTransientExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSException_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, NSException *e);

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logPermanentExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSException_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, NSException *e);

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_runInBackgroundWithJavaLangRunnable_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, id<JavaLangRunnable> r);

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable : NSObject < JavaLangRunnable > {
 @public
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *this$0_;
}

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *)outer$;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable)

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$);

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable)

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1 : NSObject < JavaLangRunnable > {
 @public
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *this$0_;
  id<JavaUtilCollection> val$persistedTasks_;
}

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *)outer$
                                                                            withJavaUtilCollection:(id<JavaUtilCollection>)capture$0;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1)

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_withJavaUtilCollection_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1 *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *outer$, id<JavaUtilCollection> capture$0);

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1 *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_withJavaUtilCollection_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *outer$, id<JavaUtilCollection> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1 *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_withJavaUtilCollection_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *outer$, id<JavaUtilCollection> capture$0);

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable : NSObject < JavaLangRunnable > {
 @public
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *this$0_;
  id<JavaUtilList> tasks_;
}

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *)outer$
                                                                  withJavaUtilList:(id<JavaUtilList>)tasks;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable)

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable, tasks_, id<JavaUtilList>)

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withJavaUtilList_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, id<JavaUtilList> tasks);

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withJavaUtilList_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, id<JavaUtilList> tasks) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withJavaUtilList_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, id<JavaUtilList> tasks);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable)

typedef NS_ENUM(NSUInteger, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_Enum) {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_Enum_Success = 0,
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_Enum_Transient = 1,
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_Enum_Permanent = 2,
};

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult : JavaLangEnum < NSCopying >

+ (IOSObjectArray *)values;

+ (CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_values_[];

inline CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_get_Success();
J2OBJC_ENUM_CONSTANT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Success)

inline CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_get_Transient();
J2OBJC_ENUM_CONSTANT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Transient)

inline CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_get_Permanent();
J2OBJC_ENUM_CONSTANT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Permanent)

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_initWithNSString_withInt_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static IOSObjectArray *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_values();

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult)

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask : NSObject < JavaLangRunnable > {
 @public
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *this$0_;
  CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c_;
}

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *)outer$
                         withCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)task;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask)

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask, c_, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *task);

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *task) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *task);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask)

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1 : NSObject < JavaLangRunnable > {
 @public
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *this$0_;
}

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *)outer$;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1)

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1 *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *outer$);

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1 *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1 *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *outer$);

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer : NSObject {
 @public
  CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c_;
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *commandResult_;
  NSException *cause_;
}

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)c
 withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *)commandResult
                                                              withNSException:(NSException *)cause;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer)

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer, c_, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer, commandResult_, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer, cause_, NSException *)

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_withNSException_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *commandResult, NSException *cause);

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_withNSException_(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *commandResult, NSException *cause) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_withNSException_(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *commandResult, NSException *cause);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer)

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper () {
 @public
  JavaUtilPriorityQueue *priorityQueue_;
}

@end

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper, priorityQueue_, JavaUtilPriorityQueue *)

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1 : NSObject < JavaLangRunnable > {
 @public
  id<JavaLangRunnable> val$r_;
}

- (instancetype)initWithJavaLangRunnable:(id<JavaLangRunnable>)capture$0;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1)

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1_initWithJavaLangRunnable_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1 *self, id<JavaLangRunnable> capture$0);

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1 *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1 *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0);

J2OBJC_INITIALIZED_DEFN(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue)

NSString *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_TAG;

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue

- (instancetype)initWithAndroidAppApplication:(AndroidAppApplication *)appContext
withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *)config {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_initWithAndroidAppApplication_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_(self, appContext, config);
  return self;
}

- (void)otherOperationsWithAndroidOsMessage:(AndroidOsMessage *)msg {
  {
    id<JavaUtilList> copyPersisted;
    switch (((AndroidOsMessage *) nil_chk(msg))->what_) {
      case CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_START_PERSISTING_TASK:
      CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_callExecuteWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, (CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) cast_chk(msg->obj_, [CoTouchlabAndroidThreadingTasksPersistedPersistedTask class]));
      break;
      case CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PERSIST_ALL_ADDING:
      if (![((id<JavaUtilQueue>) nil_chk(addingTasks_)) isEmpty]) {
        id<JavaUtilList> copyPendingTasks = create_JavaUtilArrayList_initWithJavaUtilCollection_(addingTasks_);
        [((id<JavaUtilQueue>) nil_chk(pendingTasks_)) addAllWithJavaUtilCollection:addingTasks_];
        [((id<JavaUtilQueue>) nil_chk(addingTasks_)) clear];
        CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_runInBackgroundWithJavaLangRunnable_(self, create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withJavaUtilList_(self, copyPendingTasks));
      }
      break;
      case CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_TRIGGER_PENDING:
      copyPersisted = (id<JavaUtilList>) cast_check(msg->obj_, JavaUtilList_class_());
      [((id<JavaUtilQueue>) nil_chk(pendingTasks_)) removeAllWithJavaUtilCollection:copyPersisted];
      [((id<JavaUtilCollection>) nil_chk([((id<CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueWrapper>) nil_chk(tasks_)) all])) addAllWithJavaUtilCollection:copyPersisted];
      [self resetPollRunnable];
      break;
    }
  }
}

- (void)finishTaskWithAndroidOsMessage:(AndroidOsMessage *)msg
withCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)task {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer *container = (CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer *) cast_chk(((AndroidOsMessage *) nil_chk(msg))->obj_, [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer class]);
  jboolean shouldReset = true;
  @try {
    switch ([((CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer *) nil_chk(container))->commandResult_ ordinal]) {
      case CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_Enum_Success:
      [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(container->c_)) onCompleteWithAndroidContentContext:application_];
      break;
      case CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_Enum_Transient:
      CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logTransientExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSException_(self, container->c_, container->cause_);
      [((id<CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueWrapper>) nil_chk(tasks_)) offerWithId:container->c_];
      shouldReset = false;
      [self callQueueFinished];
      break;
      case CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_Enum_Permanent:
      CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logPermanentExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSException_(self, container->c_, container->cause_);
      break;
      default:
      @throw create_CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException_initWithNSString_(@"Unknown status");
    }
  }
  @finally {
    if (shouldReset) {
      [self resetPollRunnable];
    }
  }
}

- (void)executeWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)task {
  [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(task)) setMyQueueWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:self];
  if (CoTouchlabAndroidThreadingUtilsUiThreadContext_isInUiThread()) {
    CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_callExecuteWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, task);
  }
  else {
    [((AndroidOsHandler *) nil_chk(handler_)) sendMessageWithAndroidOsMessage:[handler_ obtainMessageWithInt:CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_START_PERSISTING_TASK withId:task]];
  }
}

- (void)callExecuteWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)task {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_callExecuteWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, task);
}

- (CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState *)copyPersistedState {
  CoTouchlabAndroidThreadingUtilsUiThreadContext_assertUiThread();
  CoTouchlabAndroidThreadingTasksBaseTaskQueue_TaskQueueState *taskQueueState = [self copyState];
  return create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState_initWithJavaUtilList_withJavaUtilList_withJavaUtilList_withCoTouchlabAndroidThreadingTasksTask_(create_JavaUtilArrayList_initWithJavaUtilCollection_(addingTasks_), create_JavaUtilArrayList_initWithJavaUtilCollection_(pendingTasks_), [((CoTouchlabAndroidThreadingTasksBaseTaskQueue_TaskQueueState *) nil_chk(taskQueueState)) getQueued], [taskQueueState getCurrentTask]);
}

- (jboolean)checkHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)c {
  return CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_checkHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, c);
}

- (jboolean)checkCollectionHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)c
                                                                          withJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_checkCollectionHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withJavaUtilCollection_(self, c, collection);
}

- (void)restartQueue {
  [self resetPollRunnable];
}

- (void)callCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_callCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, persistedTask);
}

- (void)runTaskWithCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)task {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_runInBackgroundWithJavaLangRunnable_(self, create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, (CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) cast_chk(task, [CoTouchlabAndroidThreadingTasksPersistedPersistedTask class])));
}

- (void)queryWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueQuery:(id<CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueQuery>)queueQuery {
  CoTouchlabAndroidThreadingUtilsUiThreadContext_assertUiThread();
  for (CoTouchlabAndroidThreadingTasksPersistedPersistedTask * __strong pendingTask in nil_chk(addingTasks_)) {
    [((id<CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueQuery>) nil_chk(queueQuery)) queryWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:self withCoTouchlabAndroidThreadingTasksTask:pendingTask];
  }
  for (CoTouchlabAndroidThreadingTasksPersistedPersistedTask * __strong pendingTask in nil_chk(pendingTasks_)) {
    [((id<CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueQuery>) nil_chk(queueQuery)) queryWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:self withCoTouchlabAndroidThreadingTasksTask:pendingTask];
  }
  [super queryWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueQuery:queueQuery];
}

- (void)logQueueState {
}

- (void)logCommandVerboseWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask
                                                                      withNSString:(NSString *)methodName {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logCommandVerboseWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSString_(self, persistedTask, methodName);
}

- (void)logTransientExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)c
                                                                       withNSException:(NSException *)e {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logTransientExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSException_(self, c, e);
}

- (void)logPermanentExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)c
                                                                       withNSException:(NSException *)e {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logPermanentExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSException_(self, c, e);
}

- (void)runInBackgroundWithJavaLangRunnable:(id<JavaLangRunnable>)r {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_runInBackgroundWithJavaLangRunnable_(self, r);
}

- (void)dealloc {
  RELEASE_(addingTasks_);
  RELEASE_(pendingTasks_);
  RELEASE_(provider_);
  RELEASE_(commandPurgePolicy_);
  RELEASE_(log_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 6, -1, -1, -1, -1 },
    { NULL, "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 8, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 11, 6, 12, -1, -1, -1 },
    { NULL, "V", 0x4, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 19, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 21, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 22, 23, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidAppApplication:withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig:);
  methods[1].selector = @selector(otherOperationsWithAndroidOsMessage:);
  methods[2].selector = @selector(finishTaskWithAndroidOsMessage:withCoTouchlabAndroidThreadingTasksTask:);
  methods[3].selector = @selector(executeWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:);
  methods[4].selector = @selector(callExecuteWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:);
  methods[5].selector = @selector(copyPersistedState);
  methods[6].selector = @selector(checkHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:);
  methods[7].selector = @selector(checkCollectionHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:withJavaUtilCollection:);
  methods[8].selector = @selector(restartQueue);
  methods[9].selector = @selector(callCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:);
  methods[10].selector = @selector(runTaskWithCoTouchlabAndroidThreadingTasksTask:);
  methods[11].selector = @selector(queryWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueQuery:);
  methods[12].selector = @selector(logQueueState);
  methods[13].selector = @selector(logCommandVerboseWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:withNSString:);
  methods[14].selector = @selector(logTransientExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:withNSException:);
  methods[15].selector = @selector(logPermanentExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:withNSException:);
  methods[16].selector = @selector(runInBackgroundWithJavaLangRunnable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 24, -1, -1 },
    { "START_PERSISTING_TASK", "I", .constantValue.asInt = CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_START_PERSISTING_TASK, 0x18, -1, -1, -1, -1 },
    { "PERSIST_ALL_ADDING", "I", .constantValue.asInt = CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PERSIST_ALL_ADDING, 0x18, -1, -1, -1, -1 },
    { "TRIGGER_PENDING", "I", .constantValue.asInt = CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_TRIGGER_PENDING, 0x18, -1, -1, -1, -1 },
    { "addingTasks_", "LJavaUtilQueue;", .constantValue.asLong = 0, 0x2, -1, -1, 25, -1 },
    { "pendingTasks_", "LJavaUtilQueue;", .constantValue.asLong = 0, 0x2, -1, -1, 25, -1 },
    { "provider_", "LCoTouchlabAndroidThreadingTasksPersistedPersistenceProvider;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "commandPurgePolicy_", "LCoTouchlabAndroidThreadingTasksPersistedCommandPurgePolicy;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "log_", "LCoTouchlabAndroidThreadingTasksPersistedBusLog;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidAppApplication;LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig;", "otherOperations", "LAndroidOsMessage;", "finishTask", "LAndroidOsMessage;LCoTouchlabAndroidThreadingTasksTask;", "execute", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTask;", "callExecute", "checkHasDuplicate", "checkCollectionHasDuplicate", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTask;LJavaUtilCollection;", "callCommand", "LNSException;", "runTask", "LCoTouchlabAndroidThreadingTasksTask;", "query", "LCoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueQuery;", "logCommandVerbose", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTask;LNSString;", "logTransientException", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTask;LNSException;", "logPermanentException", "runInBackground", "LJavaLangRunnable;", &CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_TAG, "Ljava/util/Queue<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable;LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable;LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult;LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask;LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer;LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper;LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState;" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue = { "PersistedTaskQueue", "co.touchlab.android.threading.tasks.persisted", ptrTable, methods, fields, 7, 0x1, 17, 9, -1, 26, -1, -1, -1 };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue;
}

+ (void)initialize {
  if (self == [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue class]) {
    JreStrongAssign(&CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_TAG, [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_class_() getSimpleName]);
    J2OBJC_SET_INITIALIZED(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue)
  }
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_initWithAndroidAppApplication_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, AndroidAppApplication *appContext, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *config) {
  CoTouchlabAndroidThreadingTasksBaseTaskQueue_initWithAndroidAppApplication_withCoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueWrapper_(self, appContext, create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper_init());
  JreStrongAssignAndConsume(&self->addingTasks_, new_JavaUtilLinkedList_init());
  JreStrongAssignAndConsume(&self->pendingTasks_, new_JavaUtilLinkedList_init());
  JreStrongAssign(&self->provider_, [((CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *) nil_chk(config)) getPersistenceProvider]);
  JreStrongAssign(&self->commandPurgePolicy_, config->commandPurgePolicy_);
  JreStrongAssign(&self->log_, [config getLog]);
  for (id<CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueListener> __strong queueListener in nil_chk([config getEventListeners])) {
    [self addListenerWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueListener:queueListener];
  }
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_runInBackgroundWithJavaLangRunnable_(self, create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_(self));
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_initWithAndroidAppApplication_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_(AndroidAppApplication *appContext, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *config) {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, initWithAndroidAppApplication_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_, appContext, config)
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_initWithAndroidAppApplication_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_(AndroidAppApplication *appContext, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *config) {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, initWithAndroidAppApplication_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_, appContext, config)
}

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_callExecuteWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *task) {
  CoTouchlabAndroidThreadingUtilsUiThreadContext_assertUiThread();
  jboolean duplicate = CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_checkHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, task);
  if (duplicate) {
    return;
  }
  [((id<JavaUtilQueue>) nil_chk(self->addingTasks_)) addWithId:task];
  [((AndroidOsHandler *) nil_chk(self->handler_)) removeMessagesWithInt:CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PERSIST_ALL_ADDING];
  [self->handler_ sendMessageWithAndroidOsMessage:[self->handler_ obtainMessageWithInt:CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PERSIST_ALL_ADDING]];
}

jboolean CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_checkHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c) {
  CoTouchlabAndroidThreadingUtilsUiThreadContext_assertUiThread();
  jboolean duplicate = CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_checkCollectionHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withJavaUtilCollection_(self, c, self->addingTasks_);
  if (!duplicate) {
    duplicate = CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_checkCollectionHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withJavaUtilCollection_(self, c, self->pendingTasks_);
  }
  if (!duplicate) {
    duplicate = CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_checkCollectionHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withJavaUtilCollection_(self, c, [((id<CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueWrapper>) nil_chk(self->tasks_)) all]);
  }
  return duplicate;
}

jboolean CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_checkCollectionHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withJavaUtilCollection_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, id<JavaUtilCollection> collection) {
  for (id __strong command in nil_chk(collection)) {
    if ([command isKindOfClass:[CoTouchlabAndroidThreadingTasksPersistedPersistedTask class]] && [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(c)) sameWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) cast_chk(command, [CoTouchlabAndroidThreadingTasksPersistedPersistedTask class])]) {
      return true;
    }
  }
  return false;
}

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_callCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *persistedTask) {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logCommandVerboseWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSString_(self, persistedTask, @"callCommand-start");
  [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(persistedTask)) runWithAndroidContentContext:self->application_];
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logCommandVerboseWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSString_(self, persistedTask, @"callComand-finish");
}

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logCommandVerboseWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSString_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *persistedTask, NSString *methodName) {
  @try {
    [((id<CoTouchlabAndroidThreadingTasksPersistedBusLog>) nil_chk(self->log_)) vWithNSString:CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_TAG withNSString:JreStrcat("$$J$$", methodName, @": ", [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(persistedTask)) getAdded], @" : ", [persistedTask logSummary])];
  }
  @catch (JavaLangException *e) {
  }
}

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logTransientExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSException_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, NSException *e) {
  [((id<CoTouchlabAndroidThreadingTasksPersistedBusLog>) nil_chk(self->log_)) eWithNSString:CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_TAG withNSString:nil withNSException:e];
  CoTouchlabAndroidThreadingErrorcontrolSoftException *pe = [e isKindOfClass:[CoTouchlabAndroidThreadingErrorcontrolSoftException class]] ? (CoTouchlabAndroidThreadingErrorcontrolSoftException *) cast_chk(e, [CoTouchlabAndroidThreadingErrorcontrolSoftException class]) : create_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSException_(e);
  [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(c)) onTransientErrorWithAndroidContentContext:self->application_ withCoTouchlabAndroidThreadingErrorcontrolSoftException:pe];
}

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logPermanentExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSException_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, NSException *e) {
  [((id<CoTouchlabAndroidThreadingTasksPersistedBusLog>) nil_chk(self->log_)) eWithNSString:CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_TAG withNSString:nil withNSException:e];
  [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(c)) onPermanentErrorWithAndroidContentContext:self->application_ withNSException:e];
}

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_runInBackgroundWithJavaLangRunnable_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, id<JavaLangRunnable> r) {
  [((id<JavaUtilConcurrentExecutorService>) nil_chk(self->executorService_)) executeWithJavaLangRunnable:create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1_initWithJavaLangRunnable_(r)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue)

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *)outer$ {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_(self, outer$);
  return self;
}

- (void)run {
  CoTouchlabAndroidThreadingUtilsUiThreadContext_assertBackgroundThread();
  id<JavaUtilCollection> persistedTasks = [((id<CoTouchlabAndroidThreadingTasksPersistedPersistenceProvider>) nil_chk(this$0_->provider_)) loadPersistedCommands];
  [((AndroidOsHandler *) nil_chk(this$0_->handler_)) postWithJavaLangRunnable:create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_withJavaUtilCollection_(self, persistedTasks)];
  [this$0_ resetPollRunnable];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue;" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable = { "LoadAllRunnable", "co.touchlab.android.threading.tasks.persisted", ptrTable, methods, fields, 7, 0x2, 2, 1, 0, -1, -1, -1, -1 };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$) {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable, initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_, outer$)
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$) {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable, initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable)

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *)outer$
                                                                            withJavaUtilCollection:(id<JavaUtilCollection>)capture$0 {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_withJavaUtilCollection_(self, outer$, capture$0);
  return self;
}

- (void)run {
  for (CoTouchlabAndroidThreadingTasksPersistedPersistedTask * __strong persistedTask in nil_chk(val$persistedTasks_)) {
    [this$0_->this$0_ insertTaskWithCoTouchlabAndroidThreadingTasksTask:persistedTask];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$persistedTasks_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable:withJavaUtilCollection:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$persistedTasks_", "LJavaUtilCollection;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Ljava/util/Collection<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable;", "run" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1 = { "", "co.touchlab.android.threading.tasks.persisted", ptrTable, methods, fields, 7, 0x8008, 2, 2, 1, -1, 2, -1, -1 };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_withJavaUtilCollection_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1 *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *outer$, id<JavaUtilCollection> capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$persistedTasks_, capture$0);
  NSObject_init(self);
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1 *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_withJavaUtilCollection_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *outer$, id<JavaUtilCollection> capture$0) {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1, initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_withJavaUtilCollection_, outer$, capture$0)
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1 *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_withJavaUtilCollection_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *outer$, id<JavaUtilCollection> capture$0) {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_1, initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_withJavaUtilCollection_, outer$, capture$0)
}

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *)outer$
                                                                  withJavaUtilList:(id<JavaUtilList>)tasks {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withJavaUtilList_(self, outer$, tasks);
  return self;
}

- (void)run {
  jlong start = JavaLangSystem_currentTimeMillis();
  [((id<CoTouchlabAndroidThreadingTasksPersistedBusLog>) nil_chk(this$0_->log_)) dWithNSString:JreLoadStatic(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, TAG) withNSString:@"PersistTasksRunnable - start"];
  CoTouchlabAndroidThreadingUtilsUiThreadContext_assertBackgroundThread();
  [((id<CoTouchlabAndroidThreadingTasksPersistedPersistenceProvider>) nil_chk(this$0_->provider_)) saveCommandBatchWithJavaUtilCollection:tasks_];
  [((AndroidOsHandler *) nil_chk(this$0_->handler_)) sendMessageWithAndroidOsMessage:[this$0_->handler_ obtainMessageWithInt:CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_TRIGGER_PENDING withId:tasks_]];
  [((id<CoTouchlabAndroidThreadingTasksPersistedBusLog>) nil_chk(this$0_->log_)) dWithNSString:JreLoadStatic(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, TAG) withNSString:JreStrcat("$J", @"PersistTasksRunnable - end - ", (JavaLangSystem_currentTimeMillis() - start))];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(tasks_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue:withJavaUtilList:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "tasks_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilList;", "(Ljava/util/List<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;)V", "Ljava/util/List<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue;" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable = { "PersistTasksRunnable", "co.touchlab.android.threading.tasks.persisted", ptrTable, methods, fields, 7, 0x2, 2, 2, 3, -1, -1, -1, -1 };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withJavaUtilList_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, id<JavaUtilList> tasks) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  JreStrongAssign(&self->tasks_, tasks);
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withJavaUtilList_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, id<JavaUtilList> tasks) {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable, initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withJavaUtilList_, outer$, tasks)
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withJavaUtilList_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, id<JavaUtilList> tasks) {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable, initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withJavaUtilList_, outer$, tasks)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable)

J2OBJC_INITIALIZED_DEFN(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult)

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_values_[3];

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult

+ (IOSObjectArray *)values {
  return CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_values();
}

+ (CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *)valueOfWithNSString:(NSString *)name {
  return CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "Success", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "Transient", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "Permanent", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Success), &JreEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Transient), &JreEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Permanent), "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue;", "Ljava/lang/Enum<Lco/touchlab/android/threading/tasks/persisted/PersistedTaskQueue$CommandResult;>;" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult = { "CommandResult", "co.touchlab.android.threading.tasks.persisted", ptrTable, methods, fields, 7, 0x401a, 2, 3, 5, -1, -1, 6, -1 };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult;
}

+ (void)initialize {
  if (self == [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 3 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    id names[] = {
      @"Success", @"Transient", @"Permanent",
    };
    for (jint i = 0; i < 3; i++) {
      (CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_initWithNSString_withInt_(e, names[i], i);
    }
    J2OBJC_SET_INITIALIZED(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult)
  }
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_initWithNSString_withInt_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_values() {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_initialize();
  return [IOSObjectArray arrayWithObjects:CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_values_ count:3 type:CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_class_()];
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_valueOfWithNSString_(NSString *name) {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_initialize();
  for (int i = 0; i < 3; i++) {
    CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *e = CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_fromOrdinal(NSUInteger ordinal) {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult)

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *)outer$
                         withCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)task {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, outer$, task);
  return self;
}

- (void)run {
  CoTouchlabAndroidThreadingUtilsUiThreadContext_assertBackgroundThread();
  id<JavaLangRunnable> taskRun = create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_(self);
  if ([((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(c_)) runAllInTransaction]) {
    [((id<CoTouchlabAndroidThreadingTasksPersistedPersistenceProvider>) nil_chk(this$0_->provider_)) runInTransactionWithJavaLangRunnable:taskRun];
  }
  else {
    [taskRun run];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(c_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue:withCoTouchlabAndroidThreadingTasksPersistedPersistedTask:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "c_", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTask;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCoTouchlabAndroidThreadingTasksPersistedPersistedTask;", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue;" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask = { "ExeTask", "co.touchlab.android.threading.tasks.persisted", ptrTable, methods, fields, 7, 0x2, 2, 2, 1, -1, -1, -1, -1 };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *task) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  JreStrongAssign(&self->c_, task);
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *task) {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask, initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withCoTouchlabAndroidThreadingTasksPersistedPersistedTask_, outer$, task)
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *task) {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask, initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withCoTouchlabAndroidThreadingTasksPersistedPersistedTask_, outer$, task)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask)

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *)outer$ {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_(self, outer$);
  return self;
}

- (void)run {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *commandResult;
  NSException *cause;
  @try {
    CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_callCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(this$0_->this$0_, this$0_->c_);
    cause = nil;
    commandResult = JreLoadEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Success);
  }
  @catch (CoTouchlabAndroidThreadingErrorcontrolSoftException *e) {
    cause = e;
    jboolean purge = [((id<CoTouchlabAndroidThreadingTasksPersistedCommandPurgePolicy>) nil_chk(this$0_->this$0_->commandPurgePolicy_)) purgeCommandOnTransientExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:this$0_->c_ withCoTouchlabAndroidThreadingErrorcontrolSoftException:e];
    if (purge) {
      [((id<CoTouchlabAndroidThreadingTasksPersistedBusLog>) nil_chk(this$0_->this$0_->log_)) wWithNSString:JreLoadStatic(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, TAG) withNSString:JreStrcat("$$C", @"Purging command on TransientException: {", [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(this$0_->c_)) logSummary], '}')];
      commandResult = JreLoadEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Permanent);
    }
    else {
      commandResult = JreLoadEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Transient);
    }
  }
  @catch (NSException *e) {
    cause = e;
    commandResult = JreLoadEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Permanent);
  }
  if (cause != nil) {
    [((id<CoTouchlabAndroidThreadingTasksPersistedBusLog>) nil_chk(this$0_->this$0_->log_)) eWithNSString:JreLoadStatic(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, TAG) withNSString:nil withNSException:cause];
  }
  if (commandResult == JreLoadEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Success) || commandResult == JreLoadEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Permanent)) {
    [((id<CoTouchlabAndroidThreadingTasksPersistedPersistenceProvider>) nil_chk(this$0_->this$0_->provider_)) removeCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:this$0_->c_];
  }
  else {
    [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(this$0_->c_)) setTransientExceptionCountWithInt:[this$0_->c_ getTransientExceptionCount] + 1];
    [((id<CoTouchlabAndroidThreadingTasksPersistedPersistenceProvider>) nil_chk(this$0_->this$0_->provider_)) saveCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:this$0_->c_];
  }
  [((AndroidOsHandler *) nil_chk(this$0_->this$0_->handler_)) sendMessageWithAndroidOsMessage:[this$0_->this$0_->handler_ obtainMessageWithInt:CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueHandler_POST_EXE withId:create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_withNSException_(this$0_->c_, commandResult, cause)]];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask;", "run" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1 = { "", "co.touchlab.android.threading.tasks.persisted", ptrTable, methods, fields, 7, 0x8008, 2, 1, 0, -1, 1, -1, -1 };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1 *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1 *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *outer$) {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1, initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_, outer$)
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1 *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *outer$) {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_1, initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_, outer$)
}

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)c
 withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *)commandResult
                                                              withNSException:(NSException *)cause {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_withNSException_(self, c, commandResult, cause);
  return self;
}

- (void)dealloc {
  RELEASE_(c_);
  RELEASE_(commandResult_);
  RELEASE_(cause_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult:withNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "c_", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTask;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "commandResult_", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "cause_", "LNSException;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCoTouchlabAndroidThreadingTasksPersistedPersistedTask;LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult;LNSException;", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue;" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer = { "FinishTaskContainer", "co.touchlab.android.threading.tasks.persisted", ptrTable, methods, fields, 7, 0xa, 1, 3, 1, -1, -1, -1, -1 };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_withNSException_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *commandResult, NSException *cause) {
  NSObject_init(self);
  JreStrongAssign(&self->c_, c);
  JreStrongAssign(&self->commandResult_, commandResult);
  JreStrongAssign(&self->cause_, cause);
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_withNSException_(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *commandResult, NSException *cause) {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer, initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_withNSException_, c, commandResult, cause)
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_withNSException_(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *commandResult, NSException *cause) {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer, initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_withNSException_, c, commandResult, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer)

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (CoTouchlabAndroidThreadingTasksTask *)poll {
  return [((JavaUtilPriorityQueue *) nil_chk(priorityQueue_)) poll];
}

- (void)offerWithId:(CoTouchlabAndroidThreadingTasksTask *)task {
  [((JavaUtilPriorityQueue *) nil_chk(priorityQueue_)) offerWithId:task];
}

- (id<JavaUtilCollection>)all {
  return priorityQueue_;
}

- (void)removeWithId:(CoTouchlabAndroidThreadingTasksTask *)task {
  [((JavaUtilPriorityQueue *) nil_chk(priorityQueue_)) removeWithId:task];
}

- (void)dealloc {
  RELEASE_(priorityQueue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCoTouchlabAndroidThreadingTasksTask;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, 3, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(poll);
  methods[2].selector = @selector(offerWithId:);
  methods[3].selector = @selector(all);
  methods[4].selector = @selector(removeWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "priorityQueue_", "LJavaUtilPriorityQueue;", .constantValue.asLong = 0, 0x12, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "offer", "LCoTouchlabAndroidThreadingTasksTask;", "()Ljava/util/Collection<Lco/touchlab/android/threading/tasks/Task;>;", "remove", "Ljava/util/PriorityQueue<Lco/touchlab/android/threading/tasks/Task;>;", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue;", "Ljava/lang/Object;Lco/touchlab/android/threading/tasks/BaseTaskQueue$QueueWrapper<Lco/touchlab/android/threading/tasks/Task;>;" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper = { "PriorityQueueWrapper", "co.touchlab.android.threading.tasks.persisted", ptrTable, methods, fields, 7, 0x8, 5, 1, 5, -1, -1, 6, -1 };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper_init(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->priorityQueue_, new_JavaUtilPriorityQueue_init());
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper_init() {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper, init)
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper)

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1

- (instancetype)initWithJavaLangRunnable:(id<JavaLangRunnable>)capture$0 {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1_initWithJavaLangRunnable_(self, capture$0);
  return self;
}

- (void)run {
  @try {
    [((id<JavaLangRunnable>) nil_chk(val$r_)) run];
  }
  @catch (NSException *e) {
    if ([e isKindOfClass:[JavaLangRuntimeException class]]) {
      @throw (JavaLangRuntimeException *) cast_chk(e, [JavaLangRuntimeException class]);
    }
    else if ([e isKindOfClass:[JavaLangError class]]) {
      @throw (JavaLangError *) cast_chk(e, [JavaLangError class]);
    }
    else {
      @throw create_JavaLangRuntimeException_initWithNSException_(e);
    }
  }
}

- (void)dealloc {
  RELEASE_(val$r_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangRunnable:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$r_", "LJavaLangRunnable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue;", "runInBackgroundWithJavaLangRunnable:" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1 = { "", "co.touchlab.android.threading.tasks.persisted", ptrTable, methods, fields, 7, 0x8008, 2, 1, 0, -1, 1, -1, -1 };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1_initWithJavaLangRunnable_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1 *self, id<JavaLangRunnable> capture$0) {
  JreStrongAssign(&self->val$r_, capture$0);
  NSObject_init(self);
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1 *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0) {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1, initWithJavaLangRunnable_, capture$0)
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1 *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0) {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_1, initWithJavaLangRunnable_, capture$0)
}

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)adding
                    withJavaUtilList:(id<JavaUtilList>)pending
                    withJavaUtilList:(id<JavaUtilList>)queued
withCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)currentTask {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState_initWithJavaUtilList_withJavaUtilList_withJavaUtilList_withCoTouchlabAndroidThreadingTasksTask_(self, adding, pending, queued, currentTask);
  return self;
}

- (id<JavaUtilList>)getAdding {
  return adding_;
}

- (id<JavaUtilList>)getPending {
  return pending_;
}

- (id<JavaUtilList>)getQueued {
  return queued_;
}

- (CoTouchlabAndroidThreadingTasksTask *)getCurrentTask {
  return currentTask_;
}

- (void)dealloc {
  RELEASE_(adding_);
  RELEASE_(pending_);
  RELEASE_(queued_);
  RELEASE_(currentTask_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "LCoTouchlabAndroidThreadingTasksTask;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilList:withJavaUtilList:withJavaUtilList:withCoTouchlabAndroidThreadingTasksTask:);
  methods[1].selector = @selector(getAdding);
  methods[2].selector = @selector(getPending);
  methods[3].selector = @selector(getQueued);
  methods[4].selector = @selector(getCurrentTask);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "adding_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 4, -1 },
    { "pending_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 4, -1 },
    { "queued_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 5, -1 },
    { "currentTask_", "LCoTouchlabAndroidThreadingTasksTask;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilList;LJavaUtilList;LJavaUtilList;LCoTouchlabAndroidThreadingTasksTask;", "(Ljava/util/List<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;Ljava/util/List<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;Ljava/util/List<Lco/touchlab/android/threading/tasks/Task;>;Lco/touchlab/android/threading/tasks/Task;)V", "()Ljava/util/List<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;", "()Ljava/util/List<Lco/touchlab/android/threading/tasks/Task;>;", "Ljava/util/List<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;", "Ljava/util/List<Lco/touchlab/android/threading/tasks/Task;>;", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue;" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState = { "PersistedTaskQueueState", "co.touchlab.android.threading.tasks.persisted", ptrTable, methods, fields, 7, 0x9, 5, 4, 6, -1, -1, -1, -1 };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState_initWithJavaUtilList_withJavaUtilList_withJavaUtilList_withCoTouchlabAndroidThreadingTasksTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState *self, id<JavaUtilList> adding, id<JavaUtilList> pending, id<JavaUtilList> queued, CoTouchlabAndroidThreadingTasksTask *currentTask) {
  NSObject_init(self);
  JreStrongAssign(&self->adding_, adding);
  JreStrongAssign(&self->pending_, pending);
  JreStrongAssign(&self->queued_, queued);
  JreStrongAssign(&self->currentTask_, currentTask);
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState_initWithJavaUtilList_withJavaUtilList_withJavaUtilList_withCoTouchlabAndroidThreadingTasksTask_(id<JavaUtilList> adding, id<JavaUtilList> pending, id<JavaUtilList> queued, CoTouchlabAndroidThreadingTasksTask *currentTask) {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState, initWithJavaUtilList_withJavaUtilList_withJavaUtilList_withCoTouchlabAndroidThreadingTasksTask_, adding, pending, queued, currentTask)
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState_initWithJavaUtilList_withJavaUtilList_withJavaUtilList_withCoTouchlabAndroidThreadingTasksTask_(id<JavaUtilList> adding, id<JavaUtilList> pending, id<JavaUtilList> queued, CoTouchlabAndroidThreadingTasksTask *currentTask) {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState, initWithJavaUtilList_withJavaUtilList_withJavaUtilList_withCoTouchlabAndroidThreadingTasksTask_, adding, pending, queued, currentTask)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState)
