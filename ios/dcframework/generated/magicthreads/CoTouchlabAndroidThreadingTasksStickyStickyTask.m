//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "CoTouchlabAndroidThreadingTasksStickyStickyTask.h"
#include "CoTouchlabAndroidThreadingTasksStickyStickyTaskManager.h"
#include "CoTouchlabAndroidThreadingTasksTask.h"
#include "J2ObjC_source.h"

@implementation CoTouchlabAndroidThreadingTasksStickyStickyTask

- (instancetype)initWithCoTouchlabAndroidThreadingTasksStickyStickyTaskManager:(CoTouchlabAndroidThreadingTasksStickyStickyTaskManager *)taskManager {
  CoTouchlabAndroidThreadingTasksStickyStickyTask_initWithCoTouchlabAndroidThreadingTasksStickyStickyTaskManager_(self, taskManager);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCoTouchlabAndroidThreadingTasksStickyStickyTaskManager:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "affinityId_", "J", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCoTouchlabAndroidThreadingTasksStickyStickyTaskManager;" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksStickyStickyTask = { "StickyTask", "co.touchlab.android.threading.tasks.sticky", ptrTable, methods, fields, 7, 0x401, 1, 1, -1, -1, -1, -1, -1 };
  return &_CoTouchlabAndroidThreadingTasksStickyStickyTask;
}

@end

void CoTouchlabAndroidThreadingTasksStickyStickyTask_initWithCoTouchlabAndroidThreadingTasksStickyStickyTaskManager_(CoTouchlabAndroidThreadingTasksStickyStickyTask *self, CoTouchlabAndroidThreadingTasksStickyStickyTaskManager *taskManager) {
  CoTouchlabAndroidThreadingTasksTask_init(self);
  if (taskManager != nil) self->affinityId_ = taskManager->affinityId_;
  else self->affinityId_ = -1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksStickyStickyTask)
