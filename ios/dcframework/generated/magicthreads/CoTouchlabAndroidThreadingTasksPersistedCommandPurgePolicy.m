//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/MagicThreads-doppl/library/src/main/java/co/touchlab/android/threading/tasks/persisted/CommandPurgePolicy.java
//

#include "CoTouchlabAndroidThreadingTasksPersistedCommandPurgePolicy.h"
#include "J2ObjC_source.h"

@interface CoTouchlabAndroidThreadingTasksPersistedCommandPurgePolicy : NSObject

@end

@implementation CoTouchlabAndroidThreadingTasksPersistedCommandPurgePolicy

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(purgeCommandOnTransientExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:withCoTouchlabAndroidThreadingErrorcontrolSoftException:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "purgeCommandOnTransientException", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTask;LCoTouchlabAndroidThreadingErrorcontrolSoftException;" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedCommandPurgePolicy = { "CommandPurgePolicy", "co.touchlab.android.threading.tasks.persisted", ptrTable, methods, NULL, 7, 0x609, 1, 0, -1, -1, -1, -1, -1 };
  return &_CoTouchlabAndroidThreadingTasksPersistedCommandPurgePolicy;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedCommandPurgePolicy)
