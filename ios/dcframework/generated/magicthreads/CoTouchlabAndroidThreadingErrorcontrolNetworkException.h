//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/MagicThreads-doppl/library/src/main/java/co/touchlab/android/threading/errorcontrol/NetworkException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabAndroidThreadingErrorcontrolNetworkException")
#ifdef RESTRICT_CoTouchlabAndroidThreadingErrorcontrolNetworkException
#define INCLUDE_ALL_CoTouchlabAndroidThreadingErrorcontrolNetworkException 0
#else
#define INCLUDE_ALL_CoTouchlabAndroidThreadingErrorcontrolNetworkException 1
#endif
#undef RESTRICT_CoTouchlabAndroidThreadingErrorcontrolNetworkException

#if !defined (CoTouchlabAndroidThreadingErrorcontrolNetworkException_) && (INCLUDE_ALL_CoTouchlabAndroidThreadingErrorcontrolNetworkException || defined(INCLUDE_CoTouchlabAndroidThreadingErrorcontrolNetworkException))
#define CoTouchlabAndroidThreadingErrorcontrolNetworkException_

#define RESTRICT_CoTouchlabAndroidThreadingErrorcontrolSoftException 1
#define INCLUDE_CoTouchlabAndroidThreadingErrorcontrolSoftException 1
#include "CoTouchlabAndroidThreadingErrorcontrolSoftException.h"

@interface CoTouchlabAndroidThreadingErrorcontrolNetworkException : CoTouchlabAndroidThreadingErrorcontrolSoftException

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)message;

- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)cause;

- (instancetype)initWithNSException:(NSException *)cause;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingErrorcontrolNetworkException)

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingErrorcontrolNetworkException_init(CoTouchlabAndroidThreadingErrorcontrolNetworkException *self);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolNetworkException *new_CoTouchlabAndroidThreadingErrorcontrolNetworkException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolNetworkException *create_CoTouchlabAndroidThreadingErrorcontrolNetworkException_init();

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSString_(CoTouchlabAndroidThreadingErrorcontrolNetworkException *self, NSString *message);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolNetworkException *new_CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolNetworkException *create_CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSString_(NSString *message);

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSString_withNSException_(CoTouchlabAndroidThreadingErrorcontrolNetworkException *self, NSString *message, NSException *cause);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolNetworkException *new_CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSString_withNSException_(NSString *message, NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolNetworkException *create_CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSString_withNSException_(NSString *message, NSException *cause);

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSException_(CoTouchlabAndroidThreadingErrorcontrolNetworkException *self, NSException *cause);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolNetworkException *new_CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSException_(NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolNetworkException *create_CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSException_(NSException *cause);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingErrorcontrolNetworkException)

#endif

#pragma pop_macro("INCLUDE_ALL_CoTouchlabAndroidThreadingErrorcontrolNetworkException")
