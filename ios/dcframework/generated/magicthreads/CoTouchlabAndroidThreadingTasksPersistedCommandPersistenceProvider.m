//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidContentContentValues.h"
#include "CoTouchlabAndroidThreadingTasksPersistedBusLog.h"
#include "CoTouchlabAndroidThreadingTasksPersistedBusLogImpl.h"
#include "CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider.h"
#include "CoTouchlabAndroidThreadingTasksPersistedPersistedTask.h"
#include "CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue.h"
#include "CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter.h"
#include "CoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf.h"
#include "CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory.h"
#include "CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf.h"
#include "CoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter.h"
#include "CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Exception.h"
#include "java/lang/Long.h"
#include "java/lang/Runnable.h"
#include "java/lang/reflect/Constructor.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"

@interface CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider () {
 @public
  id<JavaUtilSet> checkedCommandClasses_;
  id<CoTouchlabAndroidThreadingTasksPersistedBusLog> log_;
  id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory> databaseFactory_;
  id<CoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter> storedCommandAdapter_;
}

- (AndroidContentContentValues *)prepCommandSaveWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask;

- (CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)loadFromCursorWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf:(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf>)c;

@end

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider, checkedCommandClasses_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider, log_, id<CoTouchlabAndroidThreadingTasksPersistedBusLog>)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider, databaseFactory_, id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider, storedCommandAdapter_, id<CoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter>)

__attribute__((unused)) static AndroidContentContentValues *CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_prepCommandSaveWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *persistedTask);

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTask *CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_loadFromCursorWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf_(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *self, id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf> c);

J2OBJC_INITIALIZED_DEFN(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider)

NSString *CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_TABLE_NAME = @"__SQL_PERS_PROV";
NSString *CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_COLUMNS = @"id INTEGER PRIMARY KEY AUTOINCREMENT, type VARCHAR, commandData VARCHAR";
IOSObjectArray *CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_COLUMN_LIST;

@implementation CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory:(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>)databaseFactory {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_(self, databaseFactory);
  return self;
}

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory:(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>)databaseFactory
                                                withCoTouchlabAndroidThreadingTasksPersistedBusLog:(id<CoTouchlabAndroidThreadingTasksPersistedBusLog>)log {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(self, databaseFactory, log);
  return self;
}

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory:(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>)databaseFactory
                           withCoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter:(id<CoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter>)storedCommandAdapter
                                                withCoTouchlabAndroidThreadingTasksPersistedBusLog:(id<CoTouchlabAndroidThreadingTasksPersistedBusLog>)log {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(self, databaseFactory, storedCommandAdapter, log);
  return self;
}

- (void)removeCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask {
  @try {
    jint removedCount = [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>) nil_chk([((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>) nil_chk(databaseFactory_)) getDatabase])) delete__WithNSString:CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_TABLE_NAME withNSString:@"id = ?" withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ [((JavaLangLong *) nil_chk([((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(persistedTask)) getId])) description] } count:1 type:NSString_class_()]];
    if (removedCount != 1) {
      [((id<CoTouchlabAndroidThreadingTasksPersistedBusLog>) nil_chk(log_)) eWithNSString:JreLoadStatic(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, TAG) withNSString:JreStrcat("$I", @"Deleted count != 1, was ", removedCount)];
    }
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException class]]) {
      @throw (CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException *) cast_chk(e, [CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException class]);
    }
    else {
      @throw create_CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException_initWithNSException_(e);
    }
  }
}

- (void)saveCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask {
  [self checkNoArgWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:persistedTask];
  @try {
    AndroidContentContentValues *values = CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_prepCommandSaveWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, persistedTask);
    if ([((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(persistedTask)) getId] == nil) {
      jlong newRowId = [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>) nil_chk([((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>) nil_chk(databaseFactory_)) getDatabase])) insertOrThrowWithNSString:CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_TABLE_NAME withNSString:@"type" withAndroidContentContentValues:values];
      [persistedTask setIdWithJavaLangLong:JavaLangLong_valueOfWithLong_(newRowId)];
    }
    else {
      [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>) nil_chk([((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>) nil_chk(databaseFactory_)) getDatabase])) updateWithNSString:CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_TABLE_NAME withAndroidContentContentValues:values withNSString:@"id = ?" withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ [((JavaLangLong *) nil_chk([persistedTask getId])) description] } count:1 type:NSString_class_()]];
    }
  }
  @catch (CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException *e) {
    @throw e;
  }
  @catch (JavaLangException *e) {
    @throw create_CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException_initWithNSException_(e);
  }
}

- (void)saveCommandBatchWithJavaUtilCollection:(id<JavaUtilCollection>)persistedTasks {
  id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf> database = [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>) nil_chk(databaseFactory_)) getDatabase];
  @try {
    [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>) nil_chk(database)) beginTransaction];
    for (CoTouchlabAndroidThreadingTasksPersistedPersistedTask * __strong persistedTask in nil_chk(persistedTasks)) {
      [self saveCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:persistedTask];
    }
    [database setTransactionSuccessful];
  }
  @finally {
    [database endTransaction];
  }
}

- (id<JavaUtilCollection>)loadPersistedCommands {
  @try {
    id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf> db = [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>) nil_chk(databaseFactory_)) getDatabase];
    [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>) nil_chk(db)) beginTransaction];
    @try {
      id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf> cursor = [db queryWithNSString:CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_TABLE_NAME withNSStringArray:CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_COLUMN_LIST];
      id<JavaUtilList> persistedTasks = nil;
      @try {
        persistedTasks = create_JavaUtilArrayList_init();
        while ([((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf>) nil_chk(cursor)) moveToNext]) {
          CoTouchlabAndroidThreadingTasksPersistedPersistedTask *persistedTask = CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_loadFromCursorWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf_(self, cursor);
          if (persistedTask != nil) {
            [persistedTasks addWithId:persistedTask];
          }
        }
      }
      @finally {
        [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf>) nil_chk(cursor)) close];
      }
      [db setTransactionSuccessful];
      return persistedTasks;
    }
    @finally {
      [db endTransaction];
    }
  }
  @catch (JavaLangException *e) {
    @throw create_CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException_initWithNSException_(e);
  }
}

- (void)clearPersistedCommands {
  @try {
    [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>) nil_chk([((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>) nil_chk(databaseFactory_)) getDatabase])) delete__WithNSString:CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_TABLE_NAME withNSString:nil withNSStringArray:nil];
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException class]]) {
      @throw (CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException *) cast_chk(e, [CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException class]);
    }
    else {
      @throw create_CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException_initWithNSException_(e);
    }
  }
}

- (void)runInTransactionWithJavaLangRunnable:(id<JavaLangRunnable>)r {
  id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf> db = [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>) nil_chk(databaseFactory_)) getDatabase];
  [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>) nil_chk(db)) beginTransaction];
  @try {
    [((id<JavaLangRunnable>) nil_chk(r)) run];
    [db setTransactionSuccessful];
  }
  @finally {
    [db endTransaction];
  }
}

- (AndroidContentContentValues *)prepCommandSaveWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask {
  return CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_prepCommandSaveWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, persistedTask);
}

- (void)checkNoArgWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask {
  IOSClass *commandClass = [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(persistedTask)) java_getClass];
  if ([((id<JavaUtilSet>) nil_chk(checkedCommandClasses_)) containsWithId:commandClass]) {
    return;
  }
  jboolean isNoArg = false;
  IOSObjectArray *constructors = [commandClass getConstructors];
  {
    IOSObjectArray *a__ = constructors;
    JavaLangReflectConstructor * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaLangReflectConstructor * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangReflectConstructor *constructor = *b__++;
      if (((IOSObjectArray *) nil_chk([((JavaLangReflectConstructor *) nil_chk(constructor)) getParameterTypes]))->size_ == 0) {
        isNoArg = true;
        break;
      }
    }
  }
  if (!isNoArg) {
    @throw create_CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException_initWithNSString_(@"All StoredCommand classes must have a no-arg constructor");
  }
  [((id<JavaUtilSet>) nil_chk(checkedCommandClasses_)) addWithId:commandClass];
}

- (CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)loadFromCursorWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf:(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf>)c {
  return CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_loadFromCursorWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf_(self, c);
}

+ (void)createTablesWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf:(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>)database {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_createTablesWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf_(database);
}

+ (void)dropTablesWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf:(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>)database {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_dropTablesWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf_(database);
}

- (void)dealloc {
  RELEASE_(checkedCommandClasses_);
  RELEASE_(log_);
  RELEASE_(databaseFactory_);
  RELEASE_(storedCommandAdapter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, 5, 9, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, 5, 10, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LAndroidContentContentValues;", 0x2, 13, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x4, 14, 4, 5, -1, -1, -1 },
    { NULL, "LCoTouchlabAndroidThreadingTasksPersistedPersistedTask;", 0x2, 15, 16, 5, -1, -1, -1 },
    { NULL, "V", 0x9, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 19, 18, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory:);
  methods[1].selector = @selector(initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory:withCoTouchlabAndroidThreadingTasksPersistedBusLog:);
  methods[2].selector = @selector(initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory:withCoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter:withCoTouchlabAndroidThreadingTasksPersistedBusLog:);
  methods[3].selector = @selector(removeCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:);
  methods[4].selector = @selector(saveCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:);
  methods[5].selector = @selector(saveCommandBatchWithJavaUtilCollection:);
  methods[6].selector = @selector(loadPersistedCommands);
  methods[7].selector = @selector(clearPersistedCommands);
  methods[8].selector = @selector(runInTransactionWithJavaLangRunnable:);
  methods[9].selector = @selector(prepCommandSaveWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:);
  methods[10].selector = @selector(checkNoArgWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:);
  methods[11].selector = @selector(loadFromCursorWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf:);
  methods[12].selector = @selector(createTablesWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf:);
  methods[13].selector = @selector(dropTablesWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TABLE_NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 20, -1, -1 },
    { "COLUMNS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 21, -1, -1 },
    { "COLUMN_LIST", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 22, -1, -1 },
    { "checkedCommandClasses_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x2, -1, -1, 23, -1 },
    { "log_", "LCoTouchlabAndroidThreadingTasksPersistedBusLog;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "databaseFactory_", "LCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "storedCommandAdapter_", "LCoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory;", "LCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory;LCoTouchlabAndroidThreadingTasksPersistedBusLog;", "LCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory;LCoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter;LCoTouchlabAndroidThreadingTasksPersistedBusLog;", "removeCommand", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTask;", "LCoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException;", "saveCommand", "saveCommandBatch", "LJavaUtilCollection;", "(Ljava/util/Collection<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;)V", "()Ljava/util/Collection<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;", "runInTransaction", "LJavaLangRunnable;", "prepCommandSave", "checkNoArg", "loadFromCursor", "LCoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf;", "createTables", "LCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf;", "dropTables", &CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_TABLE_NAME, &CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_COLUMNS, &CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_COLUMN_LIST, "Ljava/util/Set<Ljava/lang/Class;>;" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider = { "CommandPersistenceProvider", "co.touchlab.android.threading.tasks.persisted", ptrTable, methods, fields, 7, 0x1, 14, 7, -1, -1, -1, -1, -1 };
  return &_CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider;
}

+ (void)initialize {
  if (self == [CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider class]) {
    JreStrongAssignAndConsume(&CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_COLUMN_LIST, [IOSObjectArray newArrayWithObjects:(id[]){ @"id", @"type", @"commandData" } count:3 type:NSString_class_()]);
    J2OBJC_SET_INITIALIZED(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider)
  }
}

@end

void CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *self, id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory> databaseFactory) {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(self, databaseFactory, nil);
}

CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *new_CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory> databaseFactory) {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider, initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_, databaseFactory)
}

CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *create_CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory> databaseFactory) {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider, initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_, databaseFactory)
}

void CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *self, id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory> databaseFactory, id<CoTouchlabAndroidThreadingTasksPersistedBusLog> log) {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(self, databaseFactory, create_CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter_init(), log);
}

CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *new_CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory> databaseFactory, id<CoTouchlabAndroidThreadingTasksPersistedBusLog> log) {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider, initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedBusLog_, databaseFactory, log)
}

CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *create_CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory> databaseFactory, id<CoTouchlabAndroidThreadingTasksPersistedBusLog> log) {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider, initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedBusLog_, databaseFactory, log)
}

void CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *self, id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory> databaseFactory, id<CoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter> storedCommandAdapter, id<CoTouchlabAndroidThreadingTasksPersistedBusLog> log) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->checkedCommandClasses_, new_JavaUtilHashSet_init());
  JreStrongAssign(&self->databaseFactory_, databaseFactory);
  JreStrongAssign(&self->storedCommandAdapter_, storedCommandAdapter);
  JreStrongAssign(&self->log_, log == nil ? create_CoTouchlabAndroidThreadingTasksPersistedBusLogImpl_init() : log);
}

CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *new_CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory> databaseFactory, id<CoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter> storedCommandAdapter, id<CoTouchlabAndroidThreadingTasksPersistedBusLog> log) {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider, initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter_withCoTouchlabAndroidThreadingTasksPersistedBusLog_, databaseFactory, storedCommandAdapter, log)
}

CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *create_CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory> databaseFactory, id<CoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter> storedCommandAdapter, id<CoTouchlabAndroidThreadingTasksPersistedBusLog> log) {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider, initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter_withCoTouchlabAndroidThreadingTasksPersistedBusLog_, databaseFactory, storedCommandAdapter, log)
}

AndroidContentContentValues *CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_prepCommandSaveWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *persistedTask) {
  NSString *commandData = [((id<CoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter>) nil_chk(self->storedCommandAdapter_)) storeCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:persistedTask];
  AndroidContentContentValues *values = create_AndroidContentContentValues_init();
  [values putWithNSString:@"type" withNSString:[[((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(persistedTask)) java_getClass] getName]];
  [values putWithNSString:@"commandData" withNSString:commandData];
  return values;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTask *CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_loadFromCursorWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf_(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *self, id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf> c) {
  @try {
    jlong id_ = [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf>) nil_chk(c)) getLongWithInt:0];
    NSString *type = [c getStringWithInt:1];
    NSString *commandData = [c getStringWithInt:2];
    CoTouchlabAndroidThreadingTasksPersistedPersistedTask *storedPersistedTask = [((id<CoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter>) nil_chk(self->storedCommandAdapter_)) inflateCommandWithNSString:commandData withNSString:type];
    [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(storedPersistedTask)) setIdWithJavaLangLong:JavaLangLong_valueOfWithLong_(id_)];
    return storedPersistedTask;
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[JavaLangClassNotFoundException class]]) {
      [((id<CoTouchlabAndroidThreadingTasksPersistedBusLog>) nil_chk(self->log_)) eWithNSString:JreLoadStatic(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, TAG) withNSString:@"Class cast on load. Nothing to do here. Be more careful." withNSException:e];
      return nil;
    }
    else if ([e isKindOfClass:[CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException class]]) {
      @throw (CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException *) cast_chk(e, [CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException class]);
    }
    else {
      @throw create_CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException_initWithNSException_(e);
    }
  }
}

void CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_createTablesWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf_(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf> database) {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initialize();
  [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>) nil_chk(database)) execSQLWithNSString:JreStrcat("$$$$C", @"create table ", CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_TABLE_NAME, @" (", CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_COLUMNS, ')')];
}

void CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_dropTablesWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf_(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf> database) {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initialize();
  [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>) nil_chk(database)) execSQLWithNSString:JreStrcat("$$", @"drop table ", CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_TABLE_NAME)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider)
