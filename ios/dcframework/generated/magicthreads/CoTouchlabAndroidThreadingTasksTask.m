//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidContentContext.h"
#include "CoTouchlabAndroidThreadingTasksBaseTaskQueue.h"
#include "CoTouchlabAndroidThreadingTasksTask.h"
#include "J2ObjC_source.h"

@implementation CoTouchlabAndroidThreadingTasksTask

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabAndroidThreadingTasksTask_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setMyQueueWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:(CoTouchlabAndroidThreadingTasksBaseTaskQueue *)myQueue {
  JreStrongAssign(&self->myQueue_, myQueue);
}

- (void)runWithAndroidContentContext:(AndroidContentContext *)context {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jboolean)handleErrorWithAndroidContentContext:(AndroidContentContext *)context
                                 withNSException:(NSException *)e {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)onCompleteWithAndroidContentContext:(AndroidContentContext *)context {
}

- (void)dealloc {
  RELEASE_(myQueue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x404, 2, 3, 4, -1, -1, -1 },
    { NULL, "Z", 0x404, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 7, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setMyQueueWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:);
  methods[2].selector = @selector(runWithAndroidContentContext:);
  methods[3].selector = @selector(handleErrorWithAndroidContentContext:withNSException:);
  methods[4].selector = @selector(onCompleteWithAndroidContentContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "myQueue_", "LCoTouchlabAndroidThreadingTasksBaseTaskQueue;", .constantValue.asLong = 0, 0x84, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setMyQueue", "LCoTouchlabAndroidThreadingTasksBaseTaskQueue;", "run", "LAndroidContentContext;", "LNSException;", "handleError", "LAndroidContentContext;LNSException;", "onComplete" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksTask = { "Task", "co.touchlab.android.threading.tasks", ptrTable, methods, fields, 7, 0x401, 5, 1, -1, -1, -1, -1, -1 };
  return &_CoTouchlabAndroidThreadingTasksTask;
}

@end

void CoTouchlabAndroidThreadingTasksTask_init(CoTouchlabAndroidThreadingTasksTask *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksTask)
