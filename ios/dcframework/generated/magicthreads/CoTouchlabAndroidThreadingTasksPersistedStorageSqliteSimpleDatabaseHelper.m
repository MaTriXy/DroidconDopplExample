//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/MagicThreads-doppl/library/src/main/java/co/touchlab/android/threading/tasks/persisted/storage/sqlite/SimpleDatabaseHelper.java
//

#include "AndroidContentContext.h"
#include "AndroidDatabaseSqliteSQLiteDatabase.h"
#include "AndroidDatabaseSqliteSQLiteOpenHelper.h"
#include "CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider.h"
#include "CoTouchlabAndroidThreadingTasksPersistedStorageSqliteClearSQLiteDatabase.h"
#include "CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"

inline jint CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper_get_VERSION();
#define CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper_VERSION 1
J2OBJC_STATIC_FIELD_CONSTANT(CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper, VERSION, jint)

@implementation CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper

- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)context
                                 withNSString:(NSString *)fileName {
  CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper_initWithAndroidContentContext_withNSString_(self, context, fileName);
  return self;
}

- (void)onOpenWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db {
  [super onOpenWithAndroidDatabaseSqliteSQLiteDatabase:db];
  [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(db)) execSQLWithNSString:@"PRAGMA foreign_keys=ON;"];
}

- (void)onCreateWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_createTablesWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf_(create_CoTouchlabAndroidThreadingTasksPersistedStorageSqliteClearSQLiteDatabase_initWithAndroidDatabaseSqliteSQLiteDatabase_(db));
}

- (void)onUpgradeWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
                                                 withInt:(jint)oldVersion
                                                 withInt:(jint)newVersion {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidContentContext:withNSString:);
  methods[1].selector = @selector(onOpenWithAndroidDatabaseSqliteSQLiteDatabase:);
  methods[2].selector = @selector(onCreateWithAndroidDatabaseSqliteSQLiteDatabase:);
  methods[3].selector = @selector(onUpgradeWithAndroidDatabaseSqliteSQLiteDatabase:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "VERSION", "I", .constantValue.asInt = CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper_VERSION, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidContentContext;LNSString;", "onOpen", "LAndroidDatabaseSqliteSQLiteDatabase;", "onCreate", "onUpgrade", "LAndroidDatabaseSqliteSQLiteDatabase;II" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper = { "SimpleDatabaseHelper", "co.touchlab.android.threading.tasks.persisted.storage.sqlite", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper_initWithAndroidContentContext_withNSString_(CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper *self, AndroidContentContext *context, NSString *fileName) {
  AndroidDatabaseSqliteSQLiteOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_(self, context, fileName, nil, CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper_VERSION);
}

CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper *new_CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper_initWithAndroidContentContext_withNSString_(AndroidContentContext *context, NSString *fileName) {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper, initWithAndroidContentContext_withNSString_, context, fileName)
}

CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper *create_CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper_initWithAndroidContentContext_withNSString_(AndroidContentContext *context, NSString *fileName) {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper, initWithAndroidContentContext_withNSString_, context, fileName)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper)
