//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "CoTouchlabAndroidThreadingTasksPersistedConfigException.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"

@implementation CoTouchlabAndroidThreadingTasksPersistedConfigException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabAndroidThreadingTasksPersistedConfigException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)detailMessage {
  CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSString_(self, detailMessage);
  return self;
}

- (instancetype)initWithNSString:(NSString *)detailMessage
                 withNSException:(NSException *)throwable {
  CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSString_withNSException_(self, detailMessage, throwable);
  return self;
}

- (instancetype)initWithNSException:(NSException *)throwable {
  CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSException_(self, throwable);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(initWithNSString:withNSException:);
  methods[3].selector = @selector(initWithNSException:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LNSString;LNSException;", "LNSException;" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedConfigException = { "ConfigException", "co.touchlab.android.threading.tasks.persisted", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_CoTouchlabAndroidThreadingTasksPersistedConfigException;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedConfigException_init(CoTouchlabAndroidThreadingTasksPersistedConfigException *self) {
  JavaLangException_init(self);
}

CoTouchlabAndroidThreadingTasksPersistedConfigException *new_CoTouchlabAndroidThreadingTasksPersistedConfigException_init() {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksPersistedConfigException, init)
}

CoTouchlabAndroidThreadingTasksPersistedConfigException *create_CoTouchlabAndroidThreadingTasksPersistedConfigException_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksPersistedConfigException, init)
}

void CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSString_(CoTouchlabAndroidThreadingTasksPersistedConfigException *self, NSString *detailMessage) {
  JavaLangException_initWithNSString_(self, detailMessage);
}

CoTouchlabAndroidThreadingTasksPersistedConfigException *new_CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSString_(NSString *detailMessage) {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksPersistedConfigException, initWithNSString_, detailMessage)
}

CoTouchlabAndroidThreadingTasksPersistedConfigException *create_CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSString_(NSString *detailMessage) {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksPersistedConfigException, initWithNSString_, detailMessage)
}

void CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSString_withNSException_(CoTouchlabAndroidThreadingTasksPersistedConfigException *self, NSString *detailMessage, NSException *throwable) {
  JavaLangException_initWithNSString_withNSException_(self, detailMessage, throwable);
}

CoTouchlabAndroidThreadingTasksPersistedConfigException *new_CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSString_withNSException_(NSString *detailMessage, NSException *throwable) {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksPersistedConfigException, initWithNSString_withNSException_, detailMessage, throwable)
}

CoTouchlabAndroidThreadingTasksPersistedConfigException *create_CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSString_withNSException_(NSString *detailMessage, NSException *throwable) {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksPersistedConfigException, initWithNSString_withNSException_, detailMessage, throwable)
}

void CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSException_(CoTouchlabAndroidThreadingTasksPersistedConfigException *self, NSException *throwable) {
  JavaLangException_initWithNSException_(self, throwable);
}

CoTouchlabAndroidThreadingTasksPersistedConfigException *new_CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSException_(NSException *throwable) {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksPersistedConfigException, initWithNSException_, throwable)
}

CoTouchlabAndroidThreadingTasksPersistedConfigException *create_CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSException_(NSException *throwable) {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksPersistedConfigException, initWithNSException_, throwable)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedConfigException)
