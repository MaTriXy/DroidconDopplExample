//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidContentContext.h"
#include "CoTouchlabAndroidThreadingErrorcontrolSoftException.h"
#include "CoTouchlabAndroidThreadingTasksHelperNeverFailPersistedTask.h"
#include "CoTouchlabAndroidThreadingTasksPersistedPersistedTask.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"

@implementation CoTouchlabAndroidThreadingTasksHelperNeverFailPersistedTask

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabAndroidThreadingTasksHelperNeverFailPersistedTask_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)runWithAndroidContentContext:(AndroidContentContext *)context {
  @try {
    [self runTaskWithAndroidContentContext:context];
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[CoTouchlabAndroidThreadingErrorcontrolSoftException class]]) @throw e;
    else [self reportErrorWithJavaLangException:e];
  }
}

- (void)runTaskWithAndroidContentContext:(AndroidContentContext *)context {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)reportErrorWithJavaLangException:(JavaLangException *)e {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jboolean)handleErrorWithAndroidContentContext:(AndroidContentContext *)context
                                 withNSException:(NSException *)e {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x14, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x404, 3, 1, 4, -1, -1, -1 },
    { NULL, "V", 0x404, 5, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(runWithAndroidContentContext:);
  methods[2].selector = @selector(runTaskWithAndroidContentContext:);
  methods[3].selector = @selector(reportErrorWithJavaLangException:);
  methods[4].selector = @selector(handleErrorWithAndroidContentContext:withNSException:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "run", "LAndroidContentContext;", "LCoTouchlabAndroidThreadingErrorcontrolSoftException;LNSException;", "runTask", "LJavaLangException;", "reportError", "handleError", "LAndroidContentContext;LNSException;" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksHelperNeverFailPersistedTask = { "NeverFailPersistedTask", "co.touchlab.android.threading.tasks.helper", ptrTable, methods, NULL, 7, 0x401, 5, 0, -1, -1, -1, -1, -1 };
  return &_CoTouchlabAndroidThreadingTasksHelperNeverFailPersistedTask;
}

@end

void CoTouchlabAndroidThreadingTasksHelperNeverFailPersistedTask_init(CoTouchlabAndroidThreadingTasksHelperNeverFailPersistedTask *self) {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTask_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksHelperNeverFailPersistedTask)
