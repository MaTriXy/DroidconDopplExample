//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/MagicThreads-doppl/library/src/main/java/co/touchlab/android/threading/errorcontrol/SoftException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabAndroidThreadingErrorcontrolSoftException")
#ifdef RESTRICT_CoTouchlabAndroidThreadingErrorcontrolSoftException
#define INCLUDE_ALL_CoTouchlabAndroidThreadingErrorcontrolSoftException 0
#else
#define INCLUDE_ALL_CoTouchlabAndroidThreadingErrorcontrolSoftException 1
#endif
#undef RESTRICT_CoTouchlabAndroidThreadingErrorcontrolSoftException

#if !defined (CoTouchlabAndroidThreadingErrorcontrolSoftException_) && (INCLUDE_ALL_CoTouchlabAndroidThreadingErrorcontrolSoftException || defined(INCLUDE_CoTouchlabAndroidThreadingErrorcontrolSoftException))
#define CoTouchlabAndroidThreadingErrorcontrolSoftException_

#define RESTRICT_JavaLangException 1
#define INCLUDE_JavaLangException 1
#include "java/lang/Exception.h"

@interface CoTouchlabAndroidThreadingErrorcontrolSoftException : JavaLangException

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)message;

- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)cause;

- (instancetype)initWithNSException:(NSException *)cause;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingErrorcontrolSoftException)

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingErrorcontrolSoftException_init(CoTouchlabAndroidThreadingErrorcontrolSoftException *self);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolSoftException *new_CoTouchlabAndroidThreadingErrorcontrolSoftException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolSoftException *create_CoTouchlabAndroidThreadingErrorcontrolSoftException_init();

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_(CoTouchlabAndroidThreadingErrorcontrolSoftException *self, NSString *message);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolSoftException *new_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolSoftException *create_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_(NSString *message);

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_withNSException_(CoTouchlabAndroidThreadingErrorcontrolSoftException *self, NSString *message, NSException *cause);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolSoftException *new_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_withNSException_(NSString *message, NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolSoftException *create_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_withNSException_(NSString *message, NSException *cause);

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSException_(CoTouchlabAndroidThreadingErrorcontrolSoftException *self, NSException *cause);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolSoftException *new_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSException_(NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolSoftException *create_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSException_(NSException *cause);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingErrorcontrolSoftException)

#endif

#pragma pop_macro("INCLUDE_ALL_CoTouchlabAndroidThreadingErrorcontrolSoftException")
