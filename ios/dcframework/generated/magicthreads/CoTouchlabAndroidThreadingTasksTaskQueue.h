//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/MagicThreads-doppl/library/src/main/java/co/touchlab/android/threading/tasks/TaskQueue.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabAndroidThreadingTasksTaskQueue")
#ifdef RESTRICT_CoTouchlabAndroidThreadingTasksTaskQueue
#define INCLUDE_ALL_CoTouchlabAndroidThreadingTasksTaskQueue 0
#else
#define INCLUDE_ALL_CoTouchlabAndroidThreadingTasksTaskQueue 1
#endif
#undef RESTRICT_CoTouchlabAndroidThreadingTasksTaskQueue

#if !defined (CoTouchlabAndroidThreadingTasksTaskQueue_) && (INCLUDE_ALL_CoTouchlabAndroidThreadingTasksTaskQueue || defined(INCLUDE_CoTouchlabAndroidThreadingTasksTaskQueue))
#define CoTouchlabAndroidThreadingTasksTaskQueue_

#define RESTRICT_CoTouchlabAndroidThreadingTasksBaseTaskQueue 1
#define INCLUDE_CoTouchlabAndroidThreadingTasksBaseTaskQueue 1
#include "CoTouchlabAndroidThreadingTasksBaseTaskQueue.h"

@class AndroidAppApplication;
@class AndroidContentContext;
@class AndroidOsMessage;
@class CoTouchlabAndroidThreadingTasksTask;

@interface CoTouchlabAndroidThreadingTasksTaskQueue : CoTouchlabAndroidThreadingTasksBaseTaskQueue

#pragma mark Public

- (instancetype)initWithAndroidAppApplication:(AndroidAppApplication *)application;

- (instancetype)initWithAndroidAppApplication:(AndroidAppApplication *)application
                                  withBoolean:(jboolean)fifo;

- (void)executeWithCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)task;

+ (CoTouchlabAndroidThreadingTasksTaskQueue *)loadQueueWithAndroidContentContext:(AndroidContentContext *)context
                                                                    withNSString:(NSString *)name;

+ (CoTouchlabAndroidThreadingTasksTaskQueue *)loadQueueWithAndroidContentContext:(AndroidContentContext *)context
                                                                    withNSString:(NSString *)name
                                                                     withBoolean:(jboolean)fifo;

+ (CoTouchlabAndroidThreadingTasksTaskQueue *)loadQueueDefaultWithAndroidContentContext:(AndroidContentContext *)context;

+ (CoTouchlabAndroidThreadingTasksTaskQueue *)loadQueueNetworkWithAndroidContentContext:(AndroidContentContext *)context;

#pragma mark Protected

- (void)finishTaskWithAndroidOsMessage:(AndroidOsMessage *)msg
withCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)task;

- (void)runTaskWithCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)task;

@end

J2OBJC_STATIC_INIT(CoTouchlabAndroidThreadingTasksTaskQueue)

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksTaskQueue *CoTouchlabAndroidThreadingTasksTaskQueue_loadQueueWithAndroidContentContext_withNSString_(AndroidContentContext *context, NSString *name);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksTaskQueue *CoTouchlabAndroidThreadingTasksTaskQueue_loadQueueWithAndroidContentContext_withNSString_withBoolean_(AndroidContentContext *context, NSString *name, jboolean fifo);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksTaskQueue *CoTouchlabAndroidThreadingTasksTaskQueue_loadQueueDefaultWithAndroidContentContext_(AndroidContentContext *context);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksTaskQueue *CoTouchlabAndroidThreadingTasksTaskQueue_loadQueueNetworkWithAndroidContentContext_(AndroidContentContext *context);

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingTasksTaskQueue_initWithAndroidAppApplication_(CoTouchlabAndroidThreadingTasksTaskQueue *self, AndroidAppApplication *application);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksTaskQueue *new_CoTouchlabAndroidThreadingTasksTaskQueue_initWithAndroidAppApplication_(AndroidAppApplication *application) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksTaskQueue *create_CoTouchlabAndroidThreadingTasksTaskQueue_initWithAndroidAppApplication_(AndroidAppApplication *application);

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingTasksTaskQueue_initWithAndroidAppApplication_withBoolean_(CoTouchlabAndroidThreadingTasksTaskQueue *self, AndroidAppApplication *application, jboolean fifo);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksTaskQueue *new_CoTouchlabAndroidThreadingTasksTaskQueue_initWithAndroidAppApplication_withBoolean_(AndroidAppApplication *application, jboolean fifo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksTaskQueue *create_CoTouchlabAndroidThreadingTasksTaskQueue_initWithAndroidAppApplication_withBoolean_(AndroidAppApplication *application, jboolean fifo);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingTasksTaskQueue)

#endif

#if !defined (CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue_) && (INCLUDE_ALL_CoTouchlabAndroidThreadingTasksTaskQueue || defined(INCLUDE_CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue))
#define CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue_

#define RESTRICT_CoTouchlabAndroidThreadingTasksBaseTaskQueue 1
#define INCLUDE_CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueWrapper 1
#include "CoTouchlabAndroidThreadingTasksBaseTaskQueue.h"

@protocol JavaUtilCollection;

@interface CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue : NSObject < CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueWrapper >

#pragma mark Public

- (instancetype)initWithBoolean:(jboolean)fifo;

- (id<JavaUtilCollection>)all;

- (void)offerWithId:(id)task;

- (id)poll;

- (void)removeWithId:(id)task;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue)

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue_initWithBoolean_(CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue *self, jboolean fifo);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue *new_CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue_initWithBoolean_(jboolean fifo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue *create_CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue_initWithBoolean_(jboolean fifo);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue)

#endif

#pragma pop_macro("INCLUDE_ALL_CoTouchlabAndroidThreadingTasksTaskQueue")
