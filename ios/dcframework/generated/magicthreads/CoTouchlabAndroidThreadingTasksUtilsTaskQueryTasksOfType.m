//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/MagicThreads-doppl/library/src/main/java/co/touchlab/android/threading/tasks/utils/TaskQueryTasksOfType.java
//

#include "CoTouchlabAndroidThreadingTasksBaseTaskQueue.h"
#include "CoTouchlabAndroidThreadingTasksTask.h"
#include "CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"

@interface CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType () {
 @public
  IOSClass *cls_;
}

@end

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType, cls_, IOSClass *)

@implementation CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType

- (instancetype)initWithIOSClass:(IOSClass *)cls {
  CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_initWithIOSClass_(self, cls);
  return self;
}

- (void)queryWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:(CoTouchlabAndroidThreadingTasksBaseTaskQueue *)queue
                      withCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)task {
  if ([[((CoTouchlabAndroidThreadingTasksTask *) nil_chk(task)) java_getClass] isEqual:cls_]) {
    found_ = true;
  }
}

- (void)dealloc {
  RELEASE_(cls_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIOSClass:);
  methods[1].selector = @selector(queryWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:withCoTouchlabAndroidThreadingTasksTask:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "found_", "Z", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "cls_", "LIOSClass;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "query", "LCoTouchlabAndroidThreadingTasksBaseTaskQueue;LCoTouchlabAndroidThreadingTasksTask;" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType = { "TaskQueryTasksOfType", "co.touchlab.android.threading.tasks.utils", ptrTable, methods, fields, 7, 0x1, 2, 2, -1, -1, -1, -1, -1 };
  return &_CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType;
}

@end

void CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_initWithIOSClass_(CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType *self, IOSClass *cls) {
  NSObject_init(self);
  JreStrongAssign(&self->cls_, cls);
}

CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType *new_CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_initWithIOSClass_(IOSClass *cls) {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType, initWithIOSClass_, cls)
}

CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType *create_CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_initWithIOSClass_(IOSClass *cls) {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType, initWithIOSClass_, cls)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType)
