//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/MagicThreads-doppl/library/src/main/java/co/touchlab/android/threading/tasks/persisted/TransientMethuselahCommandPurgePolicy.java
//

#include "CoTouchlabAndroidThreadingErrorcontrolSoftException.h"
#include "CoTouchlabAndroidThreadingTasksPersistedPersistedTask.h"
#include "CoTouchlabAndroidThreadingTasksPersistedTransientMethuselahCommandPurgePolicy.h"
#include "J2ObjC_source.h"

@implementation CoTouchlabAndroidThreadingTasksPersistedTransientMethuselahCommandPurgePolicy

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabAndroidThreadingTasksPersistedTransientMethuselahCommandPurgePolicy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)purgeCommandOnTransientExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask
                                              withCoTouchlabAndroidThreadingErrorcontrolSoftException:(CoTouchlabAndroidThreadingErrorcontrolSoftException *)exception {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(purgeCommandOnTransientExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:withCoTouchlabAndroidThreadingErrorcontrolSoftException:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "purgeCommandOnTransientException", "LCoTouchlabAndroidThreadingTasksPersistedPersistedTask;LCoTouchlabAndroidThreadingErrorcontrolSoftException;" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedTransientMethuselahCommandPurgePolicy = { "TransientMethuselahCommandPurgePolicy", "co.touchlab.android.threading.tasks.persisted", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_CoTouchlabAndroidThreadingTasksPersistedTransientMethuselahCommandPurgePolicy;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedTransientMethuselahCommandPurgePolicy_init(CoTouchlabAndroidThreadingTasksPersistedTransientMethuselahCommandPurgePolicy *self) {
  NSObject_init(self);
}

CoTouchlabAndroidThreadingTasksPersistedTransientMethuselahCommandPurgePolicy *new_CoTouchlabAndroidThreadingTasksPersistedTransientMethuselahCommandPurgePolicy_init() {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksPersistedTransientMethuselahCommandPurgePolicy, init)
}

CoTouchlabAndroidThreadingTasksPersistedTransientMethuselahCommandPurgePolicy *create_CoTouchlabAndroidThreadingTasksPersistedTransientMethuselahCommandPurgePolicy_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksPersistedTransientMethuselahCommandPurgePolicy, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedTransientMethuselahCommandPurgePolicy)
