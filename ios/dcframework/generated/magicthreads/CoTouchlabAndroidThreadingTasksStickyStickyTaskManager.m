//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidOsBundle.h"
#include "CoTouchlabAndroidThreadingTasksStickyStickyTask.h"
#include "CoTouchlabAndroidThreadingTasksStickyStickyTaskManager.h"
#include "CoTouchlabAndroidThreadingUtilsUiThreadContext.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"

inline jlong CoTouchlabAndroidThreadingTasksStickyStickyTaskManager_get_idCounter();
inline jlong CoTouchlabAndroidThreadingTasksStickyStickyTaskManager_set_idCounter(jlong value);
inline jlong *CoTouchlabAndroidThreadingTasksStickyStickyTaskManager_getRef_idCounter();
static jlong CoTouchlabAndroidThreadingTasksStickyStickyTaskManager_idCounter;
J2OBJC_STATIC_FIELD_PRIMITIVE(CoTouchlabAndroidThreadingTasksStickyStickyTaskManager, idCounter, jlong)

J2OBJC_INITIALIZED_DEFN(CoTouchlabAndroidThreadingTasksStickyStickyTaskManager)

NSString *CoTouchlabAndroidThreadingTasksStickyStickyTaskManager_CONTEXT_ID = @"CONTEXT_ID";

@implementation CoTouchlabAndroidThreadingTasksStickyStickyTaskManager

- (instancetype)initWithAndroidOsBundle:(AndroidOsBundle *)inState {
  CoTouchlabAndroidThreadingTasksStickyStickyTaskManager_initWithAndroidOsBundle_(self, inState);
  return self;
}

- (void)onSaveInstanceStateWithAndroidOsBundle:(AndroidOsBundle *)outState {
  CoTouchlabAndroidThreadingUtilsUiThreadContext_assertUiThread();
  [((AndroidOsBundle *) nil_chk(outState)) putLongWithNSString:CoTouchlabAndroidThreadingTasksStickyStickyTaskManager_CONTEXT_ID withLong:affinityId_];
}

- (jboolean)isTaskForMeWithCoTouchlabAndroidThreadingTasksStickyStickyTask:(CoTouchlabAndroidThreadingTasksStickyStickyTask *)stickyTask {
  return ((CoTouchlabAndroidThreadingTasksStickyStickyTask *) nil_chk(stickyTask))->affinityId_ == affinityId_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidOsBundle:);
  methods[1].selector = @selector(onSaveInstanceStateWithAndroidOsBundle:);
  methods[2].selector = @selector(isTaskForMeWithCoTouchlabAndroidThreadingTasksStickyStickyTask:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "idCounter", "J", .constantValue.asLong = 0, 0xa, -1, 4, -1, -1 },
    { "CONTEXT_ID", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "affinityId_", "J", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidOsBundle;", "onSaveInstanceState", "isTaskForMe", "LCoTouchlabAndroidThreadingTasksStickyStickyTask;", &CoTouchlabAndroidThreadingTasksStickyStickyTaskManager_idCounter, &CoTouchlabAndroidThreadingTasksStickyStickyTaskManager_CONTEXT_ID };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksStickyStickyTaskManager = { "StickyTaskManager", "co.touchlab.android.threading.tasks.sticky", ptrTable, methods, fields, 7, 0x1, 3, 3, -1, -1, -1, -1, -1 };
  return &_CoTouchlabAndroidThreadingTasksStickyStickyTaskManager;
}

+ (void)initialize {
  if (self == [CoTouchlabAndroidThreadingTasksStickyStickyTaskManager class]) {
    CoTouchlabAndroidThreadingTasksStickyStickyTaskManager_idCounter = JavaLangSystem_currentTimeMillis();
    J2OBJC_SET_INITIALIZED(CoTouchlabAndroidThreadingTasksStickyStickyTaskManager)
  }
}

@end

void CoTouchlabAndroidThreadingTasksStickyStickyTaskManager_initWithAndroidOsBundle_(CoTouchlabAndroidThreadingTasksStickyStickyTaskManager *self, AndroidOsBundle *inState) {
  NSObject_init(self);
  CoTouchlabAndroidThreadingUtilsUiThreadContext_assertUiThread();
  if (inState == nil || ![inState containsKeyWithNSString:CoTouchlabAndroidThreadingTasksStickyStickyTaskManager_CONTEXT_ID]) {
    self->affinityId_ = CoTouchlabAndroidThreadingTasksStickyStickyTaskManager_idCounter++;
  }
  else {
    self->affinityId_ = [inState getLongWithNSString:CoTouchlabAndroidThreadingTasksStickyStickyTaskManager_CONTEXT_ID];
  }
}

CoTouchlabAndroidThreadingTasksStickyStickyTaskManager *new_CoTouchlabAndroidThreadingTasksStickyStickyTaskManager_initWithAndroidOsBundle_(AndroidOsBundle *inState) {
  J2OBJC_NEW_IMPL(CoTouchlabAndroidThreadingTasksStickyStickyTaskManager, initWithAndroidOsBundle_, inState)
}

CoTouchlabAndroidThreadingTasksStickyStickyTaskManager *create_CoTouchlabAndroidThreadingTasksStickyStickyTaskManager_initWithAndroidOsBundle_(AndroidOsBundle *inState) {
  J2OBJC_CREATE_IMPL(CoTouchlabAndroidThreadingTasksStickyStickyTaskManager, initWithAndroidOsBundle_, inState)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksStickyStickyTaskManager)
