//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidContentContext.h"
#include "CoTouchlabAndroidThreadingEventbusEventBusExt.h"
#include "CoTouchlabAndroidThreadingTasksTask.h"
#include "DCPConferenceDataHelper.h"
#include "DCPLoadConferenceDataTask.h"
#include "DeGreenrobotEventEventBus.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"

@implementation DCPLoadConferenceDataTask

- (instancetype)initWithBoolean:(jboolean)allEvents {
  DCPLoadConferenceDataTask_initWithBoolean_(self, allEvents);
  return self;
}

- (void)runWithAndroidContentContext:(AndroidContentContext *)context {
  JreStrongAssign(&conferenceDayHolders_, DCPConferenceDataHelper_listDaysWithAndroidContentContext_withBoolean_(context, allEvents_));
}

- (jboolean)handleErrorWithAndroidContentContext:(AndroidContentContext *)context
                                 withNSException:(NSException *)e {
  return false;
}

- (void)onCompleteWithAndroidContentContext:(AndroidContentContext *)context {
  [((DeGreenrobotEventEventBus *) nil_chk(CoTouchlabAndroidThreadingEventbusEventBusExt_getDefault())) postWithId:self];
}

- (void)dealloc {
  RELEASE_(conferenceDayHolders_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, 3, -1, -1, -1 },
    { NULL, "Z", 0x4, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 6, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithBoolean:);
  methods[1].selector = @selector(runWithAndroidContentContext:);
  methods[2].selector = @selector(handleErrorWithAndroidContentContext:withNSException:);
  methods[3].selector = @selector(onCompleteWithAndroidContentContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "allEvents_", "Z", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "conferenceDayHolders_", "[LDCPConferenceDayHolder;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "Z", "run", "LAndroidContentContext;", "LNSException;", "handleError", "LAndroidContentContext;LNSException;", "onComplete" };
  static const J2ObjcClassInfo _DCPLoadConferenceDataTask = { "LoadConferenceDataTask", "co.touchlab.droidconandroid.shared.presenter", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, -1, -1 };
  return &_DCPLoadConferenceDataTask;
}

@end

void DCPLoadConferenceDataTask_initWithBoolean_(DCPLoadConferenceDataTask *self, jboolean allEvents) {
  CoTouchlabAndroidThreadingTasksTask_init(self);
  self->allEvents_ = allEvents;
}

DCPLoadConferenceDataTask *new_DCPLoadConferenceDataTask_initWithBoolean_(jboolean allEvents) {
  J2OBJC_NEW_IMPL(DCPLoadConferenceDataTask, initWithBoolean_, allEvents)
}

DCPLoadConferenceDataTask *create_DCPLoadConferenceDataTask_initWithBoolean_(jboolean allEvents) {
  J2OBJC_CREATE_IMPL(DCPLoadConferenceDataTask, initWithBoolean_, allEvents)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DCPLoadConferenceDataTask)
