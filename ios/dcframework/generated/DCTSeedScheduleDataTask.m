//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidContentContext.h"
#include "CoTouchlabAndroidThreadingEventbusEventBusExt.h"
#include "CoTouchlabAndroidThreadingTasksTask.h"
#include "CoTouchlabDroidconandroidCrashReport.h"
#include "CoTouchlabDroidconandroidSharedNetworkDaoConvention.h"
#include "CoTouchlabDroidconandroidSharedTasksPersistedRefreshScheduleData.h"
#include "ComGoogleGsonGson.h"
#include "DCTSeedScheduleDataTask.h"
#include "DeGreenrobotEventEventBus.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"

@interface DCTSeedScheduleDataTask () {
 @public
  NSString *dataseed_;
}

@end

J2OBJC_FIELD_SETTER(DCTSeedScheduleDataTask, dataseed_, NSString *)

@implementation DCTSeedScheduleDataTask

- (instancetype)initWithNSString:(NSString *)dataseed {
  DCTSeedScheduleDataTask_initWithNSString_(self, dataseed);
  return self;
}

- (jboolean)handleErrorWithAndroidContentContext:(AndroidContentContext *)context
                                 withNSException:(NSException *)e {
  CoTouchlabDroidconandroidCrashReport_logExceptionWithNSException_(e);
  return false;
}

- (void)runWithAndroidContentContext:(AndroidContentContext *)context {
  CoTouchlabDroidconandroidSharedTasksPersistedRefreshScheduleData_saveConventionDataWithAndroidContentContext_withCoTouchlabDroidconandroidSharedNetworkDaoConvention_(context, [create_ComGoogleGsonGson_init() fromJsonWithNSString:dataseed_ withIOSClass:CoTouchlabDroidconandroidSharedNetworkDaoConvention_class_()]);
}

- (void)onCompleteWithAndroidContentContext:(AndroidContentContext *)context {
  [((DeGreenrobotEventEventBus *) nil_chk(CoTouchlabAndroidThreadingEventbusEventBusExt_getDefault())) postWithId:self];
}

- (void)dealloc {
  RELEASE_(dataseed_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x4, 6, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(handleErrorWithAndroidContentContext:withNSException:);
  methods[2].selector = @selector(runWithAndroidContentContext:);
  methods[3].selector = @selector(onCompleteWithAndroidContentContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "dataseed_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "handleError", "LAndroidContentContext;LNSException;", "run", "LAndroidContentContext;", "LNSException;", "onComplete" };
  static const J2ObjcClassInfo _DCTSeedScheduleDataTask = { "SeedScheduleDataTask", "co.touchlab.droidconandroid.shared.tasks", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_DCTSeedScheduleDataTask;
}

@end

void DCTSeedScheduleDataTask_initWithNSString_(DCTSeedScheduleDataTask *self, NSString *dataseed) {
  CoTouchlabAndroidThreadingTasksTask_init(self);
  JreStrongAssign(&self->dataseed_, dataseed);
}

DCTSeedScheduleDataTask *new_DCTSeedScheduleDataTask_initWithNSString_(NSString *dataseed) {
  J2OBJC_NEW_IMPL(DCTSeedScheduleDataTask, initWithNSString_, dataseed)
}

DCTSeedScheduleDataTask *create_DCTSeedScheduleDataTask_initWithNSString_(NSString *dataseed) {
  J2OBJC_CREATE_IMPL(DCTSeedScheduleDataTask, initWithNSString_, dataseed)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DCTSeedScheduleDataTask)
