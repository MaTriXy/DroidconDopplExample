//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "CoTouchlabDroidconandroidSharedUtilsSlackUtils.h"
#include "DCDVenue.h"
#include "J2ObjC_source.h"

@interface CoTouchlabDroidconandroidSharedUtilsSlackUtils ()

+ (NSString *)getChannelIdWithDCDVenue:(DCDVenue *)venue;

@end

__attribute__((unused)) static NSString *CoTouchlabDroidconandroidSharedUtilsSlackUtils_getChannelIdWithDCDVenue_(DCDVenue *venue);

NSString *CoTouchlabDroidconandroidSharedUtilsSlackUtils_TEAM_ID = @"T26RNU7R9";
NSString *CoTouchlabDroidconandroidSharedUtilsSlackUtils_TRACK_1_SLACK_ID = @"C26UZCM6U";
NSString *CoTouchlabDroidconandroidSharedUtilsSlackUtils_TRACK_2_SLACK_ID = @"C26V6M621";
NSString *CoTouchlabDroidconandroidSharedUtilsSlackUtils_TRACK_3_SLACK_ID = @"C26V6NK4M";
NSString *CoTouchlabDroidconandroidSharedUtilsSlackUtils_TRACK_4_SLACK_ID = @"C26VA6XMF";
NSString *CoTouchlabDroidconandroidSharedUtilsSlackUtils_DEFAULT_SLACK_ID = @"C26RNUDV1";

@implementation CoTouchlabDroidconandroidSharedUtilsSlackUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabDroidconandroidSharedUtilsSlackUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NSString *)createSlackLinkWithDCDVenue:(DCDVenue *)venue {
  return CoTouchlabDroidconandroidSharedUtilsSlackUtils_createSlackLinkWithDCDVenue_(venue);
}

+ (NSString *)getChannelIdWithDCDVenue:(DCDVenue *)venue {
  return CoTouchlabDroidconandroidSharedUtilsSlackUtils_getChannelIdWithDCDVenue_(venue);
}

+ (NSString *)createSlackLinkHttpWithDCDVenue:(DCDVenue *)venue {
  return CoTouchlabDroidconandroidSharedUtilsSlackUtils_createSlackLinkHttpWithDCDVenue_(venue);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 2, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 3, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createSlackLinkWithDCDVenue:);
  methods[2].selector = @selector(getChannelIdWithDCDVenue:);
  methods[3].selector = @selector(createSlackLinkHttpWithDCDVenue:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TEAM_ID", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "TRACK_1_ID", "J", .constantValue.asLong = CoTouchlabDroidconandroidSharedUtilsSlackUtils_TRACK_1_ID, 0x19, -1, -1, -1, -1 },
    { "TRACK_1_SLACK_ID", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "TRACK_2_ID", "J", .constantValue.asLong = CoTouchlabDroidconandroidSharedUtilsSlackUtils_TRACK_2_ID, 0x19, -1, -1, -1, -1 },
    { "TRACK_2_SLACK_ID", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "TRACK_3_ID", "J", .constantValue.asLong = CoTouchlabDroidconandroidSharedUtilsSlackUtils_TRACK_3_ID, 0x19, -1, -1, -1, -1 },
    { "TRACK_3_SLACK_ID", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "TRACK_4_ID", "J", .constantValue.asLong = CoTouchlabDroidconandroidSharedUtilsSlackUtils_TRACK_4_ID, 0x19, -1, -1, -1, -1 },
    { "TRACK_4_SLACK_ID", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "DEFAULT_SLACK_ID", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
  };
  static const void *ptrTable[] = { "createSlackLink", "LDCDVenue;", "getChannelId", "createSlackLinkHttp", &CoTouchlabDroidconandroidSharedUtilsSlackUtils_TEAM_ID, &CoTouchlabDroidconandroidSharedUtilsSlackUtils_TRACK_1_SLACK_ID, &CoTouchlabDroidconandroidSharedUtilsSlackUtils_TRACK_2_SLACK_ID, &CoTouchlabDroidconandroidSharedUtilsSlackUtils_TRACK_3_SLACK_ID, &CoTouchlabDroidconandroidSharedUtilsSlackUtils_TRACK_4_SLACK_ID, &CoTouchlabDroidconandroidSharedUtilsSlackUtils_DEFAULT_SLACK_ID };
  static const J2ObjcClassInfo _CoTouchlabDroidconandroidSharedUtilsSlackUtils = { "SlackUtils", "co.touchlab.droidconandroid.shared.utils", ptrTable, methods, fields, 7, 0x1, 4, 10, -1, -1, -1, -1, -1 };
  return &_CoTouchlabDroidconandroidSharedUtilsSlackUtils;
}

@end

void CoTouchlabDroidconandroidSharedUtilsSlackUtils_init(CoTouchlabDroidconandroidSharedUtilsSlackUtils *self) {
  NSObject_init(self);
}

CoTouchlabDroidconandroidSharedUtilsSlackUtils *new_CoTouchlabDroidconandroidSharedUtilsSlackUtils_init() {
  J2OBJC_NEW_IMPL(CoTouchlabDroidconandroidSharedUtilsSlackUtils, init)
}

CoTouchlabDroidconandroidSharedUtilsSlackUtils *create_CoTouchlabDroidconandroidSharedUtilsSlackUtils_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabDroidconandroidSharedUtilsSlackUtils, init)
}

NSString *CoTouchlabDroidconandroidSharedUtilsSlackUtils_createSlackLinkWithDCDVenue_(DCDVenue *venue) {
  CoTouchlabDroidconandroidSharedUtilsSlackUtils_initialize();
  if (venue == nil) {
    return JreStrcat("$$", @"slack://open?team=", CoTouchlabDroidconandroidSharedUtilsSlackUtils_TEAM_ID);
  }
  return JreStrcat("$$$$", @"slack://channel?team=", CoTouchlabDroidconandroidSharedUtilsSlackUtils_TEAM_ID, @"&id=", CoTouchlabDroidconandroidSharedUtilsSlackUtils_getChannelIdWithDCDVenue_(venue));
}

NSString *CoTouchlabDroidconandroidSharedUtilsSlackUtils_getChannelIdWithDCDVenue_(DCDVenue *venue) {
  CoTouchlabDroidconandroidSharedUtilsSlackUtils_initialize();
  NSString *channelId;
  if (((DCDVenue *) nil_chk(venue))->id__ == CoTouchlabDroidconandroidSharedUtilsSlackUtils_TRACK_1_ID) {
    channelId = CoTouchlabDroidconandroidSharedUtilsSlackUtils_TRACK_1_SLACK_ID;
  }
  else if (venue->id__ == CoTouchlabDroidconandroidSharedUtilsSlackUtils_TRACK_2_ID) {
    channelId = CoTouchlabDroidconandroidSharedUtilsSlackUtils_TRACK_2_SLACK_ID;
  }
  else if (venue->id__ == CoTouchlabDroidconandroidSharedUtilsSlackUtils_TRACK_3_ID) {
    channelId = CoTouchlabDroidconandroidSharedUtilsSlackUtils_TRACK_3_SLACK_ID;
  }
  else if (venue->id__ == CoTouchlabDroidconandroidSharedUtilsSlackUtils_TRACK_4_ID) {
    channelId = CoTouchlabDroidconandroidSharedUtilsSlackUtils_TRACK_4_SLACK_ID;
  }
  else {
    channelId = CoTouchlabDroidconandroidSharedUtilsSlackUtils_DEFAULT_SLACK_ID;
  }
  return channelId;
}

NSString *CoTouchlabDroidconandroidSharedUtilsSlackUtils_createSlackLinkHttpWithDCDVenue_(DCDVenue *venue) {
  CoTouchlabDroidconandroidSharedUtilsSlackUtils_initialize();
  NSString *link = @"https://droidcon-nyc.slack.com/messages/";
  if (venue == nil) {
    JreStrAppend(&link, "$", @"random");
  }
  else {
    JreStrAppend(&link, "$", CoTouchlabDroidconandroidSharedUtilsSlackUtils_getChannelIdWithDCDVenue_(venue));
  }
  return link;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabDroidconandroidSharedUtilsSlackUtils)
