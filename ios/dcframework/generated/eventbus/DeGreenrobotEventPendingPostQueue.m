//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/EventBus-doppl/EventBus/src/main/java/de/greenrobot/event/PendingPostQueue.java
//

#include "DeGreenrobotEventPendingPost.h"
#include "DeGreenrobotEventPendingPostQueue.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/NullPointerException.h"

@interface DeGreenrobotEventPendingPostQueue () {
 @public
  DeGreenrobotEventPendingPost *head_;
  DeGreenrobotEventPendingPost *tail_;
}

@end

J2OBJC_FIELD_SETTER(DeGreenrobotEventPendingPostQueue, head_, DeGreenrobotEventPendingPost *)
J2OBJC_FIELD_SETTER(DeGreenrobotEventPendingPostQueue, tail_, DeGreenrobotEventPendingPost *)

@implementation DeGreenrobotEventPendingPostQueue

- (void)enqueueWithDeGreenrobotEventPendingPost:(DeGreenrobotEventPendingPost *)pendingPost {
  @synchronized(self) {
    if (pendingPost == nil) {
      @throw create_JavaLangNullPointerException_initWithNSString_(@"null cannot be enqueued");
    }
    if (tail_ != nil) {
      JreStrongAssign(&tail_->next_, pendingPost);
      JreStrongAssign(&tail_, pendingPost);
    }
    else if (head_ == nil) {
      JreStrongAssign(&head_, JreStrongAssign(&tail_, pendingPost));
    }
    else {
      @throw create_JavaLangIllegalStateException_initWithNSString_(@"Head present, but no tail");
    }
    [self notifyAll];
  }
}

- (DeGreenrobotEventPendingPost *)poll {
  @synchronized(self) {
    DeGreenrobotEventPendingPost *pendingPost = head_;
    if (head_ != nil) {
      JreStrongAssign(&head_, head_->next_);
      if (head_ == nil) {
        JreStrongAssign(&tail_, nil);
      }
    }
    return pendingPost;
  }
}

- (DeGreenrobotEventPendingPost *)pollWithInt:(jint)maxMillisToWait {
  @synchronized(self) {
    if (head_ == nil) {
      [self waitWithLong:maxMillisToWait];
    }
    return [self poll];
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DeGreenrobotEventPendingPostQueue_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(head_);
  RELEASE_(tail_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x20, 0, 1, -1, -1, -1, -1 },
    { NULL, "LDeGreenrobotEventPendingPost;", 0x20, -1, -1, -1, -1, -1, -1 },
    { NULL, "LDeGreenrobotEventPendingPost;", 0x20, 2, 3, 4, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(enqueueWithDeGreenrobotEventPendingPost:);
  methods[1].selector = @selector(poll);
  methods[2].selector = @selector(pollWithInt:);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "head_", "LDeGreenrobotEventPendingPost;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tail_", "LDeGreenrobotEventPendingPost;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "enqueue", "LDeGreenrobotEventPendingPost;", "poll", "I", "LJavaLangInterruptedException;" };
  static const J2ObjcClassInfo _DeGreenrobotEventPendingPostQueue = { "PendingPostQueue", "de.greenrobot.event", ptrTable, methods, fields, 7, 0x10, 4, 2, -1, -1, -1, -1, -1 };
  return &_DeGreenrobotEventPendingPostQueue;
}

@end

void DeGreenrobotEventPendingPostQueue_init(DeGreenrobotEventPendingPostQueue *self) {
  NSObject_init(self);
}

DeGreenrobotEventPendingPostQueue *new_DeGreenrobotEventPendingPostQueue_init() {
  J2OBJC_NEW_IMPL(DeGreenrobotEventPendingPostQueue, init)
}

DeGreenrobotEventPendingPostQueue *create_DeGreenrobotEventPendingPostQueue_init() {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventPendingPostQueue, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventPendingPostQueue)
