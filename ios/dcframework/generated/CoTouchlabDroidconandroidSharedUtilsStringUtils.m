//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "CoTouchlabDroidconandroidSharedUtilsStringUtils.h"
#include "J2ObjC_source.h"
#include "android/text/TextUtils.h"

@implementation CoTouchlabDroidconandroidSharedUtilsStringUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabDroidconandroidSharedUtilsStringUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jboolean)isEmptyWithNSString:(NSString *)s {
  return CoTouchlabDroidconandroidSharedUtilsStringUtils_isEmptyWithNSString_(s);
}

+ (jboolean)isNotEmptyWithNSString:(NSString *)s {
  return CoTouchlabDroidconandroidSharedUtilsStringUtils_isNotEmptyWithNSString_(s);
}

+ (NSString *)trimToEmptyWithNSString:(NSString *)s {
  return CoTouchlabDroidconandroidSharedUtilsStringUtils_trimToEmptyWithNSString_(s);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 3, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isEmptyWithNSString:);
  methods[2].selector = @selector(isNotEmptyWithNSString:);
  methods[3].selector = @selector(trimToEmptyWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "isEmpty", "LNSString;", "isNotEmpty", "trimToEmpty" };
  static const J2ObjcClassInfo _CoTouchlabDroidconandroidSharedUtilsStringUtils = { "StringUtils", "co.touchlab.droidconandroid.shared.utils", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_CoTouchlabDroidconandroidSharedUtilsStringUtils;
}

@end

void CoTouchlabDroidconandroidSharedUtilsStringUtils_init(CoTouchlabDroidconandroidSharedUtilsStringUtils *self) {
  NSObject_init(self);
}

CoTouchlabDroidconandroidSharedUtilsStringUtils *new_CoTouchlabDroidconandroidSharedUtilsStringUtils_init() {
  J2OBJC_NEW_IMPL(CoTouchlabDroidconandroidSharedUtilsStringUtils, init)
}

CoTouchlabDroidconandroidSharedUtilsStringUtils *create_CoTouchlabDroidconandroidSharedUtilsStringUtils_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabDroidconandroidSharedUtilsStringUtils, init)
}

jboolean CoTouchlabDroidconandroidSharedUtilsStringUtils_isEmptyWithNSString_(NSString *s) {
  CoTouchlabDroidconandroidSharedUtilsStringUtils_initialize();
  return AndroidTextTextUtils_isEmptyWithJavaLangCharSequence_(s);
}

jboolean CoTouchlabDroidconandroidSharedUtilsStringUtils_isNotEmptyWithNSString_(NSString *s) {
  CoTouchlabDroidconandroidSharedUtilsStringUtils_initialize();
  return !AndroidTextTextUtils_isEmptyWithJavaLangCharSequence_(s);
}

NSString *CoTouchlabDroidconandroidSharedUtilsStringUtils_trimToEmptyWithNSString_(NSString *s) {
  CoTouchlabDroidconandroidSharedUtilsStringUtils_initialize();
  if (s == nil) return @"";
  else return [s java_trim];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabDroidconandroidSharedUtilsStringUtils)
