//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/DroidconDopplExample/lib/src/main/java/co/touchlab/droidconandroid/presenter/ConferenceDayHolder.java
//

#include "DCPConferenceDayHolder.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"

@implementation DCPConferenceDayHolder

- (instancetype)initWithNSString:(NSString *)dayString
   withDCPScheduleBlockHourArray:(IOSObjectArray *)hourHolders {
  DCPConferenceDayHolder_initWithNSString_withDCPScheduleBlockHourArray_(self, dayString, hourHolders);
  return self;
}

- (void)dealloc {
  RELEASE_(dayString_);
  RELEASE_(hourHolders_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withDCPScheduleBlockHourArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "dayString_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "hourHolders_", "[LDCPScheduleBlockHour;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;[LDCPScheduleBlockHour;" };
  static const J2ObjcClassInfo _DCPConferenceDayHolder = { "ConferenceDayHolder", "co.touchlab.droidconandroid.presenter", ptrTable, methods, fields, 7, 0x1, 1, 2, -1, -1, -1, -1, -1 };
  return &_DCPConferenceDayHolder;
}

@end

void DCPConferenceDayHolder_initWithNSString_withDCPScheduleBlockHourArray_(DCPConferenceDayHolder *self, NSString *dayString, IOSObjectArray *hourHolders) {
  NSObject_init(self);
  JreStrongAssign(&self->dayString_, dayString);
  JreStrongAssign(&self->hourHolders_, hourHolders);
}

DCPConferenceDayHolder *new_DCPConferenceDayHolder_initWithNSString_withDCPScheduleBlockHourArray_(NSString *dayString, IOSObjectArray *hourHolders) {
  J2OBJC_NEW_IMPL(DCPConferenceDayHolder, initWithNSString_withDCPScheduleBlockHourArray_, dayString, hourHolders)
}

DCPConferenceDayHolder *create_DCPConferenceDayHolder_initWithNSString_withDCPScheduleBlockHourArray_(NSString *dayString, IOSObjectArray *hourHolders) {
  J2OBJC_CREATE_IMPL(DCPConferenceDayHolder, initWithNSString_withDCPScheduleBlockHourArray_, dayString, hourHolders)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DCPConferenceDayHolder)
