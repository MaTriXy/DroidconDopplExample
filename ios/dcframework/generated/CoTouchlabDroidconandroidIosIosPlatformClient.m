//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/temp/DroidconAppSimple/lib/src/main/java/co/touchlab/droidconandroid/ios/IosPlatformClient.java
//

#include "CoTouchlabDroidconandroidIosIosFirebase.h"
#include "CoTouchlabDroidconandroidIosIosPlatformClient.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RetrofitClientClient.h"
#include "java/io/PrintWriter.h"
#include "java/io/StringWriter.h"
#include "java/lang/Integer.h"

@interface DCIosPlatformClient () {
 @public
  id<DCIosFirebase> iosFirebase_;
}

@end

J2OBJC_FIELD_SETTER(DCIosPlatformClient, iosFirebase_, id<DCIosFirebase>)

@implementation DCIosPlatformClient

- (instancetype)initWithDCIosFirebase:(id<DCIosFirebase>)iosFirebase {
  DCIosPlatformClient_initWithDCIosFirebase_(self, iosFirebase);
  return self;
}

- (id<RetrofitClientClient>)makeClient {
  return nil;
}

- (NSString *)baseUrl {
  return @"https://droidcon-server.herokuapp.com/";
}

- (JavaLangInteger *)getConventionId {
  return JavaLangInteger_valueOfWithInt_(61100);
}

- (void)logWithNSString:(NSString *)s {
  [((id<DCIosFirebase>) nil_chk(iosFirebase_)) logFirebaseNativeWithNSString:s];
}

- (void)logExceptionWithNSException:(NSException *)t {
  JavaIoStringWriter *sw = create_JavaIoStringWriter_init();
  JavaIoPrintWriter *pw = create_JavaIoPrintWriter_initWithJavaIoWriter_(sw);
  [((NSException *) nil_chk(t)) printStackTraceWithJavaIoPrintWriter:pw];
  [pw close];
  [((id<DCIosFirebase>) nil_chk(iosFirebase_)) logPushFirebaseNativeWithNSString:[sw description]];
}

- (void)logEventWithNSString:(NSString *)name
           withNSStringArray:(IOSObjectArray *)params {
  [((id<DCIosFirebase>) nil_chk(iosFirebase_)) logEventWithNSString:name withNSStringArray:params];
}

- (NSString *)getStringWithNSString:(NSString *)id_ {
  return [[NSBundle mainBundle] objectForInfoDictionaryKey:id_];
}

- (void)dealloc {
  RELEASE_(iosFirebase_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LRetrofitClientClient;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x81, 5, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x101, 7, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDCIosFirebase:);
  methods[1].selector = @selector(makeClient);
  methods[2].selector = @selector(baseUrl);
  methods[3].selector = @selector(getConventionId);
  methods[4].selector = @selector(logWithNSString:);
  methods[5].selector = @selector(logExceptionWithNSException:);
  methods[6].selector = @selector(logEventWithNSString:withNSStringArray:);
  methods[7].selector = @selector(getStringWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "iosFirebase_", "LDCIosFirebase;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LDCIosFirebase;", "log", "LNSString;", "logException", "LNSException;", "logEvent", "LNSString;[LNSString;", "getString" };
  static const J2ObjcClassInfo _DCIosPlatformClient = { "IosPlatformClient", "co.touchlab.droidconandroid.ios", ptrTable, methods, fields, 7, 0x1, 8, 1, -1, -1, -1, -1, -1 };
  return &_DCIosPlatformClient;
}

@end

void DCIosPlatformClient_initWithDCIosFirebase_(DCIosPlatformClient *self, id<DCIosFirebase> iosFirebase) {
  NSObject_init(self);
  JreStrongAssign(&self->iosFirebase_, iosFirebase);
}

DCIosPlatformClient *new_DCIosPlatformClient_initWithDCIosFirebase_(id<DCIosFirebase> iosFirebase) {
  J2OBJC_NEW_IMPL(DCIosPlatformClient, initWithDCIosFirebase_, iosFirebase)
}

DCIosPlatformClient *create_DCIosPlatformClient_initWithDCIosFirebase_(id<DCIosFirebase> iosFirebase) {
  J2OBJC_CREATE_IMPL(DCIosPlatformClient, initWithDCIosFirebase_, iosFirebase)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DCIosPlatformClient)
